
/**
 * @license
 * lodash 3.10.1 (Custom Build) lodash.com/license | Underscore.js 1.8.3 underscorejs.org/LICENSE
 * Build: `lodash modern -o ./lodash.js`
 */
;(function(){function n(n,t){if(n!==t){var r=null===n,e=n===w,u=n===n,o=null===t,i=t===w,f=t===t;if(n>t&&!o||!u||r&&!i&&f||e&&f)return 1;if(n<t&&!r||!f||o&&!e&&u||i&&u)return-1}return 0}function t(n,t,r){for(var e=n.length,u=r?e:-1;r?u--:++u<e;)if(t(n[u],u,n))return u;return-1}function r(n,t,r){if(t!==t)return p(n,r);r-=1;for(var e=n.length;++r<e;)if(n[r]===t)return r;return-1}function e(n){return typeof n=="function"||false}function u(n){return null==n?"":n+""}function o(n,t){for(var r=-1,e=n.length;++r<e&&-1<t.indexOf(n.charAt(r)););
return r}function i(n,t){for(var r=n.length;r--&&-1<t.indexOf(n.charAt(r)););return r}function f(t,r){return n(t.a,r.a)||t.b-r.b}function a(n){return Nn[n]}function c(n){return Tn[n]}function l(n,t,r){return t?n=Bn[n]:r&&(n=Dn[n]),"\\"+n}function s(n){return"\\"+Dn[n]}function p(n,t,r){var e=n.length;for(t+=r?0:-1;r?t--:++t<e;){var u=n[t];if(u!==u)return t}return-1}function h(n){return!!n&&typeof n=="object"}function _(n){return 160>=n&&9<=n&&13>=n||32==n||160==n||5760==n||6158==n||8192<=n&&(8202>=n||8232==n||8233==n||8239==n||8287==n||12288==n||65279==n);
}function v(n,t){for(var r=-1,e=n.length,u=-1,o=[];++r<e;)n[r]===t&&(n[r]=z,o[++u]=r);return o}function g(n){for(var t=-1,r=n.length;++t<r&&_(n.charCodeAt(t)););return t}function y(n){for(var t=n.length;t--&&_(n.charCodeAt(t)););return t}function d(n){return Ln[n]}function m(_){function Nn(n){if(h(n)&&!(Oo(n)||n instanceof zn)){if(n instanceof Ln)return n;if(nu.call(n,"__chain__")&&nu.call(n,"__wrapped__"))return Mr(n)}return new Ln(n)}function Tn(){}function Ln(n,t,r){this.__wrapped__=n,this.__actions__=r||[],
this.__chain__=!!t}function zn(n){this.__wrapped__=n,this.__actions__=[],this.__dir__=1,this.__filtered__=false,this.__iteratees__=[],this.__takeCount__=Ru,this.__views__=[]}function Bn(){this.__data__={}}function Dn(n){var t=n?n.length:0;for(this.data={hash:gu(null),set:new lu};t--;)this.push(n[t])}function Mn(n,t){var r=n.data;return(typeof t=="string"||ge(t)?r.set.has(t):r.hash[t])?0:-1}function qn(n,t){var r=-1,e=n.length;for(t||(t=Be(e));++r<e;)t[r]=n[r];return t}function Pn(n,t){for(var r=-1,e=n.length;++r<e&&false!==t(n[r],r,n););
return n}function Kn(n,t){for(var r=-1,e=n.length;++r<e;)if(!t(n[r],r,n))return false;return true}function Vn(n,t){for(var r=-1,e=n.length,u=-1,o=[];++r<e;){var i=n[r];t(i,r,n)&&(o[++u]=i)}return o}function Gn(n,t){for(var r=-1,e=n.length,u=Be(e);++r<e;)u[r]=t(n[r],r,n);return u}function Jn(n,t){for(var r=-1,e=t.length,u=n.length;++r<e;)n[u+r]=t[r];return n}function Xn(n,t,r,e){var u=-1,o=n.length;for(e&&o&&(r=n[++u]);++u<o;)r=t(r,n[u],u,n);return r}function Hn(n,t){for(var r=-1,e=n.length;++r<e;)if(t(n[r],r,n))return true;
return false}function Qn(n,t,r,e){return n!==w&&nu.call(e,r)?n:t}function nt(n,t,r){for(var e=-1,u=zo(t),o=u.length;++e<o;){var i=u[e],f=n[i],a=r(f,t[i],i,n,t);(a===a?a===f:f!==f)&&(f!==w||i in n)||(n[i]=a)}return n}function tt(n,t){return null==t?n:et(t,zo(t),n)}function rt(n,t){for(var r=-1,e=null==n,u=!e&&Er(n),o=u?n.length:0,i=t.length,f=Be(i);++r<i;){var a=t[r];f[r]=u?Cr(a,o)?n[a]:w:e?w:n[a]}return f}function et(n,t,r){r||(r={});for(var e=-1,u=t.length;++e<u;){var o=t[e];r[o]=n[o]}return r}function ut(n,t,r){
var e=typeof n;return"function"==e?t===w?n:Bt(n,t,r):null==n?Fe:"object"==e?bt(n):t===w?ze(n):xt(n,t)}function ot(n,t,r,e,u,o,i){var f;if(r&&(f=u?r(n,e,u):r(n)),f!==w)return f;if(!ge(n))return n;if(e=Oo(n)){if(f=kr(n),!t)return qn(n,f)}else{var a=ru.call(n),c=a==K;if(a!=Z&&a!=B&&(!c||u))return Fn[a]?Rr(n,a,t):u?n:{};if(f=Ir(c?{}:n),!t)return tt(f,n)}for(o||(o=[]),i||(i=[]),u=o.length;u--;)if(o[u]==n)return i[u];return o.push(n),i.push(f),(e?Pn:_t)(n,function(e,u){f[u]=ot(e,t,r,u,n,o,i)}),f}function it(n,t,r){
if(typeof n!="function")throw new Ge(L);return su(function(){n.apply(w,r)},t)}function ft(n,t){var e=n?n.length:0,u=[];if(!e)return u;var o=-1,i=xr(),f=i===r,a=f&&t.length>=F&&gu&&lu?new Dn(t):null,c=t.length;a&&(i=Mn,f=false,t=a);n:for(;++o<e;)if(a=n[o],f&&a===a){for(var l=c;l--;)if(t[l]===a)continue n;u.push(a)}else 0>i(t,a,0)&&u.push(a);return u}function at(n,t){var r=true;return Su(n,function(n,e,u){return r=!!t(n,e,u)}),r}function ct(n,t,r,e){var u=e,o=u;return Su(n,function(n,i,f){i=+t(n,i,f),(r(i,u)||i===e&&i===o)&&(u=i,
o=n)}),o}function lt(n,t){var r=[];return Su(n,function(n,e,u){t(n,e,u)&&r.push(n)}),r}function st(n,t,r,e){var u;return r(n,function(n,r,o){return t(n,r,o)?(u=e?r:n,false):void 0}),u}function pt(n,t,r,e){e||(e=[]);for(var u=-1,o=n.length;++u<o;){var i=n[u];h(i)&&Er(i)&&(r||Oo(i)||pe(i))?t?pt(i,t,r,e):Jn(e,i):r||(e[e.length]=i)}return e}function ht(n,t){Nu(n,t,Re)}function _t(n,t){return Nu(n,t,zo)}function vt(n,t){return Tu(n,t,zo)}function gt(n,t){for(var r=-1,e=t.length,u=-1,o=[];++r<e;){var i=t[r];
ve(n[i])&&(o[++u]=i)}return o}function yt(n,t,r){if(null!=n){r!==w&&r in Br(n)&&(t=[r]),r=0;for(var e=t.length;null!=n&&r<e;)n=n[t[r++]];return r&&r==e?n:w}}function dt(n,t,r,e,u,o){if(n===t)n=true;else if(null==n||null==t||!ge(n)&&!h(t))n=n!==n&&t!==t;else n:{var i=dt,f=Oo(n),a=Oo(t),c=D,l=D;f||(c=ru.call(n),c==B?c=Z:c!=Z&&(f=xe(n))),a||(l=ru.call(t),l==B?l=Z:l!=Z&&xe(t));var s=c==Z,a=l==Z,l=c==l;if(!l||f||s){if(!e&&(c=s&&nu.call(n,"__wrapped__"),a=a&&nu.call(t,"__wrapped__"),c||a)){n=i(c?n.value():n,a?t.value():t,r,e,u,o);
break n}if(l){for(u||(u=[]),o||(o=[]),c=u.length;c--;)if(u[c]==n){n=o[c]==t;break n}u.push(n),o.push(t),n=(f?yr:mr)(n,t,i,r,e,u,o),u.pop(),o.pop()}else n=false}else n=dr(n,t,c)}return n}function mt(n,t,r){var e=t.length,u=e,o=!r;if(null==n)return!u;for(n=Br(n);e--;){var i=t[e];if(o&&i[2]?i[1]!==n[i[0]]:!(i[0]in n))return false}for(;++e<u;){var i=t[e],f=i[0],a=n[f],c=i[1];if(o&&i[2]){if(a===w&&!(f in n))return false}else if(i=r?r(a,c,f):w,i===w?!dt(c,a,r,true):!i)return false}return true}function wt(n,t){var r=-1,e=Er(n)?Be(n.length):[];
return Su(n,function(n,u,o){e[++r]=t(n,u,o)}),e}function bt(n){var t=Ar(n);if(1==t.length&&t[0][2]){var r=t[0][0],e=t[0][1];return function(n){return null==n?false:n[r]===e&&(e!==w||r in Br(n))}}return function(n){return mt(n,t)}}function xt(n,t){var r=Oo(n),e=Wr(n)&&t===t&&!ge(t),u=n+"";return n=Dr(n),function(o){if(null==o)return false;var i=u;if(o=Br(o),!(!r&&e||i in o)){if(o=1==n.length?o:yt(o,Et(n,0,-1)),null==o)return false;i=Zr(n),o=Br(o)}return o[i]===t?t!==w||i in o:dt(t,o[i],w,true)}}function At(n,t,r,e,u){
if(!ge(n))return n;var o=Er(t)&&(Oo(t)||xe(t)),i=o?w:zo(t);return Pn(i||t,function(f,a){if(i&&(a=f,f=t[a]),h(f)){e||(e=[]),u||(u=[]);n:{for(var c=a,l=e,s=u,p=l.length,_=t[c];p--;)if(l[p]==_){n[c]=s[p];break n}var p=n[c],v=r?r(p,_,c,n,t):w,g=v===w;g&&(v=_,Er(_)&&(Oo(_)||xe(_))?v=Oo(p)?p:Er(p)?qn(p):[]:me(_)||pe(_)?v=pe(p)?ke(p):me(p)?p:{}:g=false),l.push(_),s.push(v),g?n[c]=At(v,_,r,l,s):(v===v?v!==p:p===p)&&(n[c]=v)}}else c=n[a],l=r?r(c,f,a,n,t):w,(s=l===w)&&(l=f),l===w&&(!o||a in n)||!s&&(l===l?l===c:c!==c)||(n[a]=l);
}),n}function jt(n){return function(t){return null==t?w:t[n]}}function kt(n){var t=n+"";return n=Dr(n),function(r){return yt(r,n,t)}}function It(n,t){for(var r=n?t.length:0;r--;){var e=t[r];if(e!=u&&Cr(e)){var u=e;pu.call(n,e,1)}}}function Rt(n,t){return n+yu(ku()*(t-n+1))}function Ot(n,t,r,e,u){return u(n,function(n,u,o){r=e?(e=false,n):t(r,n,u,o)}),r}function Et(n,t,r){var e=-1,u=n.length;for(t=null==t?0:+t||0,0>t&&(t=-t>u?0:u+t),r=r===w||r>u?u:+r||0,0>r&&(r+=u),u=t>r?0:r-t>>>0,t>>>=0,r=Be(u);++e<u;)r[e]=n[e+t];
return r}function Ct(n,t){var r;return Su(n,function(n,e,u){return r=t(n,e,u),!r}),!!r}function Ut(n,t){var r=n.length;for(n.sort(t);r--;)n[r]=n[r].c;return n}function Wt(t,r,e){var u=wr(),o=-1;return r=Gn(r,function(n){return u(n)}),t=wt(t,function(n){return{a:Gn(r,function(t){return t(n)}),b:++o,c:n}}),Ut(t,function(t,r){var u;n:{for(var o=-1,i=t.a,f=r.a,a=i.length,c=e.length;++o<a;)if(u=n(i[o],f[o])){if(o>=c)break n;o=e[o],u*="asc"===o||true===o?1:-1;break n}u=t.b-r.b}return u})}function $t(n,t){
var r=0;return Su(n,function(n,e,u){r+=+t(n,e,u)||0}),r}function St(n,t){var e=-1,u=xr(),o=n.length,i=u===r,f=i&&o>=F,a=f&&gu&&lu?new Dn(void 0):null,c=[];a?(u=Mn,i=false):(f=false,a=t?[]:c);n:for(;++e<o;){var l=n[e],s=t?t(l,e,n):l;if(i&&l===l){for(var p=a.length;p--;)if(a[p]===s)continue n;t&&a.push(s),c.push(l)}else 0>u(a,s,0)&&((t||f)&&a.push(s),c.push(l))}return c}function Ft(n,t){for(var r=-1,e=t.length,u=Be(e);++r<e;)u[r]=n[t[r]];return u}function Nt(n,t,r,e){for(var u=n.length,o=e?u:-1;(e?o--:++o<u)&&t(n[o],o,n););
return r?Et(n,e?0:o,e?o+1:u):Et(n,e?o+1:0,e?u:o)}function Tt(n,t){var r=n;r instanceof zn&&(r=r.value());for(var e=-1,u=t.length;++e<u;)var o=t[e],r=o.func.apply(o.thisArg,Jn([r],o.args));return r}function Lt(n,t,r){var e=0,u=n?n.length:e;if(typeof t=="number"&&t===t&&u<=Eu){for(;e<u;){var o=e+u>>>1,i=n[o];(r?i<=t:i<t)&&null!==i?e=o+1:u=o}return u}return zt(n,t,Fe,r)}function zt(n,t,r,e){t=r(t);for(var u=0,o=n?n.length:0,i=t!==t,f=null===t,a=t===w;u<o;){var c=yu((u+o)/2),l=r(n[c]),s=l!==w,p=l===l;
(i?p||e:f?p&&s&&(e||null!=l):a?p&&(e||s):null==l?0:e?l<=t:l<t)?u=c+1:o=c}return xu(o,Ou)}function Bt(n,t,r){if(typeof n!="function")return Fe;if(t===w)return n;switch(r){case 1:return function(r){return n.call(t,r)};case 3:return function(r,e,u){return n.call(t,r,e,u)};case 4:return function(r,e,u,o){return n.call(t,r,e,u,o)};case 5:return function(r,e,u,o,i){return n.call(t,r,e,u,o,i)}}return function(){return n.apply(t,arguments)}}function Dt(n){var t=new ou(n.byteLength);return new hu(t).set(new hu(n)),
t}function Mt(n,t,r){for(var e=r.length,u=-1,o=bu(n.length-e,0),i=-1,f=t.length,a=Be(f+o);++i<f;)a[i]=t[i];for(;++u<e;)a[r[u]]=n[u];for(;o--;)a[i++]=n[u++];return a}function qt(n,t,r){for(var e=-1,u=r.length,o=-1,i=bu(n.length-u,0),f=-1,a=t.length,c=Be(i+a);++o<i;)c[o]=n[o];for(i=o;++f<a;)c[i+f]=t[f];for(;++e<u;)c[i+r[e]]=n[o++];return c}function Pt(n,t){return function(r,e,u){var o=t?t():{};if(e=wr(e,u,3),Oo(r)){u=-1;for(var i=r.length;++u<i;){var f=r[u];n(o,f,e(f,u,r),r)}}else Su(r,function(t,r,u){
n(o,t,e(t,r,u),u)});return o}}function Kt(n){return le(function(t,r){var e=-1,u=null==t?0:r.length,o=2<u?r[u-2]:w,i=2<u?r[2]:w,f=1<u?r[u-1]:w;for(typeof o=="function"?(o=Bt(o,f,5),u-=2):(o=typeof f=="function"?f:w,u-=o?1:0),i&&Ur(r[0],r[1],i)&&(o=3>u?w:o,u=1);++e<u;)(i=r[e])&&n(t,i,o);return t})}function Vt(n,t){return function(r,e){var u=r?Bu(r):0;if(!Sr(u))return n(r,e);for(var o=t?u:-1,i=Br(r);(t?o--:++o<u)&&false!==e(i[o],o,i););return r}}function Zt(n){return function(t,r,e){var u=Br(t);e=e(t);for(var o=e.length,i=n?o:-1;n?i--:++i<o;){
var f=e[i];if(false===r(u[f],f,u))break}return t}}function Yt(n,t){function r(){return(this&&this!==Zn&&this instanceof r?e:n).apply(t,arguments)}var e=Jt(n);return r}function Gt(n){return function(t){var r=-1;t=$e(Ce(t));for(var e=t.length,u="";++r<e;)u=n(u,t[r],r);return u}}function Jt(n){return function(){var t=arguments;switch(t.length){case 0:return new n;case 1:return new n(t[0]);case 2:return new n(t[0],t[1]);case 3:return new n(t[0],t[1],t[2]);case 4:return new n(t[0],t[1],t[2],t[3]);case 5:
return new n(t[0],t[1],t[2],t[3],t[4]);case 6:return new n(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new n(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var r=$u(n.prototype),t=n.apply(r,t);return ge(t)?t:r}}function Xt(n){function t(r,e,u){return u&&Ur(r,e,u)&&(e=w),r=gr(r,n,w,w,w,w,w,e),r.placeholder=t.placeholder,r}return t}function Ht(n,t){return le(function(r){var e=r[0];return null==e?e:(r.push(t),n.apply(w,r))})}function Qt(n,t){return function(r,e,u){if(u&&Ur(r,e,u)&&(e=w),e=wr(e,u,3),1==e.length){
u=r=Oo(r)?r:zr(r);for(var o=e,i=-1,f=u.length,a=t,c=a;++i<f;){var l=u[i],s=+o(l);n(s,a)&&(a=s,c=l)}if(u=c,!r.length||u!==t)return u}return ct(r,e,n,t)}}function nr(n,r){return function(e,u,o){return u=wr(u,o,3),Oo(e)?(u=t(e,u,r),-1<u?e[u]:w):st(e,u,n)}}function tr(n){return function(r,e,u){return r&&r.length?(e=wr(e,u,3),t(r,e,n)):-1}}function rr(n){return function(t,r,e){return r=wr(r,e,3),st(t,r,n,true)}}function er(n){return function(){for(var t,r=arguments.length,e=n?r:-1,u=0,o=Be(r);n?e--:++e<r;){
var i=o[u++]=arguments[e];if(typeof i!="function")throw new Ge(L);!t&&Ln.prototype.thru&&"wrapper"==br(i)&&(t=new Ln([],true))}for(e=t?-1:r;++e<r;){var i=o[e],u=br(i),f="wrapper"==u?zu(i):w;t=f&&$r(f[0])&&f[1]==(E|k|R|C)&&!f[4].length&&1==f[9]?t[br(f[0])].apply(t,f[3]):1==i.length&&$r(i)?t[u]():t.thru(i)}return function(){var n=arguments,e=n[0];if(t&&1==n.length&&Oo(e)&&e.length>=F)return t.plant(e).value();for(var u=0,n=r?o[u].apply(this,n):e;++u<r;)n=o[u].call(this,n);return n}}}function ur(n,t){
return function(r,e,u){return typeof e=="function"&&u===w&&Oo(r)?n(r,e):t(r,Bt(e,u,3))}}function or(n){return function(t,r,e){return(typeof r!="function"||e!==w)&&(r=Bt(r,e,3)),n(t,r,Re)}}function ir(n){return function(t,r,e){return(typeof r!="function"||e!==w)&&(r=Bt(r,e,3)),n(t,r)}}function fr(n){return function(t,r,e){var u={};return r=wr(r,e,3),_t(t,function(t,e,o){o=r(t,e,o),e=n?o:e,t=n?t:o,u[e]=t}),u}}function ar(n){return function(t,r,e){return t=u(t),(n?t:"")+pr(t,r,e)+(n?"":t)}}function cr(n){
var t=le(function(r,e){var u=v(e,t.placeholder);return gr(r,n,w,e,u)});return t}function lr(n,t){return function(r,e,u,o){var i=3>arguments.length;return typeof e=="function"&&o===w&&Oo(r)?n(r,e,u,i):Ot(r,wr(e,o,4),u,i,t)}}function sr(n,t,r,e,u,o,i,f,a,c){function l(){for(var m=arguments.length,b=m,j=Be(m);b--;)j[b]=arguments[b];if(e&&(j=Mt(j,e,u)),o&&(j=qt(j,o,i)),_||y){var b=l.placeholder,k=v(j,b),m=m-k.length;if(m<c){var I=f?qn(f):w,m=bu(c-m,0),E=_?k:w,k=_?w:k,C=_?j:w,j=_?w:j;return t|=_?R:O,t&=~(_?O:R),
g||(t&=~(x|A)),j=[n,t,r,C,E,j,k,I,a,m],I=sr.apply(w,j),$r(n)&&Du(I,j),I.placeholder=b,I}}if(b=p?r:this,I=h?b[n]:n,f)for(m=j.length,E=xu(f.length,m),k=qn(j);E--;)C=f[E],j[E]=Cr(C,m)?k[C]:w;return s&&a<j.length&&(j.length=a),this&&this!==Zn&&this instanceof l&&(I=d||Jt(n)),I.apply(b,j)}var s=t&E,p=t&x,h=t&A,_=t&k,g=t&j,y=t&I,d=h?w:Jt(n);return l}function pr(n,t,r){return n=n.length,t=+t,n<t&&mu(t)?(t-=n,r=null==r?" ":r+"",Ue(r,vu(t/r.length)).slice(0,t)):""}function hr(n,t,r,e){function u(){for(var t=-1,f=arguments.length,a=-1,c=e.length,l=Be(c+f);++a<c;)l[a]=e[a];
for(;f--;)l[a++]=arguments[++t];return(this&&this!==Zn&&this instanceof u?i:n).apply(o?r:this,l)}var o=t&x,i=Jt(n);return u}function _r(n){var t=Pe[n];return function(n,r){return(r=r===w?0:+r||0)?(r=au(10,r),t(n*r)/r):t(n)}}function vr(n){return function(t,r,e,u){var o=wr(e);return null==e&&o===ut?Lt(t,r,n):zt(t,r,o(e,u,1),n)}}function gr(n,t,r,e,u,o,i,f){var a=t&A;if(!a&&typeof n!="function")throw new Ge(L);var c=e?e.length:0;if(c||(t&=~(R|O),e=u=w),c-=u?u.length:0,t&O){var l=e,s=u;e=u=w}var p=a?w:zu(n);
return r=[n,t,r,e,u,l,s,o,i,f],p&&(e=r[1],t=p[1],f=e|t,u=t==E&&e==k||t==E&&e==C&&r[7].length<=p[8]||t==(E|C)&&e==k,(f<E||u)&&(t&x&&(r[2]=p[2],f|=e&x?0:j),(e=p[3])&&(u=r[3],r[3]=u?Mt(u,e,p[4]):qn(e),r[4]=u?v(r[3],z):qn(p[4])),(e=p[5])&&(u=r[5],r[5]=u?qt(u,e,p[6]):qn(e),r[6]=u?v(r[5],z):qn(p[6])),(e=p[7])&&(r[7]=qn(e)),t&E&&(r[8]=null==r[8]?p[8]:xu(r[8],p[8])),null==r[9]&&(r[9]=p[9]),r[0]=p[0],r[1]=f),t=r[1],f=r[9]),r[9]=null==f?a?0:n.length:bu(f-c,0)||0,(p?Lu:Du)(t==x?Yt(r[0],r[2]):t!=R&&t!=(x|R)||r[4].length?sr.apply(w,r):hr.apply(w,r),r);
}function yr(n,t,r,e,u,o,i){var f=-1,a=n.length,c=t.length;if(a!=c&&(!u||c<=a))return false;for(;++f<a;){var l=n[f],c=t[f],s=e?e(u?c:l,u?l:c,f):w;if(s!==w){if(s)continue;return false}if(u){if(!Hn(t,function(n){return l===n||r(l,n,e,u,o,i)}))return false}else if(l!==c&&!r(l,c,e,u,o,i))return false}return true}function dr(n,t,r){switch(r){case M:case q:return+n==+t;case P:return n.name==t.name&&n.message==t.message;case V:return n!=+n?t!=+t:n==+t;case Y:case G:return n==t+""}return false}function mr(n,t,r,e,u,o,i){var f=zo(n),a=f.length,c=zo(t).length;
if(a!=c&&!u)return false;for(c=a;c--;){var l=f[c];if(!(u?l in t:nu.call(t,l)))return false}for(var s=u;++c<a;){var l=f[c],p=n[l],h=t[l],_=e?e(u?h:p,u?p:h,l):w;if(_===w?!r(p,h,e,u,o,i):!_)return false;s||(s="constructor"==l)}return s||(r=n.constructor,e=t.constructor,!(r!=e&&"constructor"in n&&"constructor"in t)||typeof r=="function"&&r instanceof r&&typeof e=="function"&&e instanceof e)?true:false}function wr(n,t,r){var e=Nn.callback||Se,e=e===Se?ut:e;return r?e(n,t,r):e}function br(n){for(var t=n.name+"",r=Wu[t],e=r?r.length:0;e--;){
var u=r[e],o=u.func;if(null==o||o==n)return u.name}return t}function xr(n,t,e){var u=Nn.indexOf||Vr,u=u===Vr?r:u;return n?u(n,t,e):u}function Ar(n){n=Oe(n);for(var t=n.length;t--;){var r=n[t][1];n[t][2]=r===r&&!ge(r)}return n}function jr(n,t){var r=null==n?w:n[t];return ye(r)?r:w}function kr(n){var t=n.length,r=new n.constructor(t);return t&&"string"==typeof n[0]&&nu.call(n,"index")&&(r.index=n.index,r.input=n.input),r}function Ir(n){return n=n.constructor,typeof n=="function"&&n instanceof n||(n=Ve),
new n}function Rr(n,t,r){var e=n.constructor;switch(t){case J:return Dt(n);case M:case q:return new e(+n);case X:case H:case Q:case nn:case tn:case rn:case en:case un:case on:return t=n.buffer,new e(r?Dt(t):t,n.byteOffset,n.length);case V:case G:return new e(n);case Y:var u=new e(n.source,kn.exec(n));u.lastIndex=n.lastIndex}return u}function Or(n,t,r){return null==n||Wr(t,n)||(t=Dr(t),n=1==t.length?n:yt(n,Et(t,0,-1)),t=Zr(t)),t=null==n?n:n[t],null==t?w:t.apply(n,r)}function Er(n){return null!=n&&Sr(Bu(n));
}function Cr(n,t){return n=typeof n=="number"||On.test(n)?+n:-1,t=null==t?Cu:t,-1<n&&0==n%1&&n<t}function Ur(n,t,r){if(!ge(r))return false;var e=typeof t;return("number"==e?Er(r)&&Cr(t,r.length):"string"==e&&t in r)?(t=r[t],n===n?n===t:t!==t):false}function Wr(n,t){var r=typeof n;return"string"==r&&dn.test(n)||"number"==r?true:Oo(n)?false:!yn.test(n)||null!=t&&n in Br(t)}function $r(n){var t=br(n),r=Nn[t];return typeof r=="function"&&t in zn.prototype?n===r?true:(t=zu(r),!!t&&n===t[0]):false}function Sr(n){return typeof n=="number"&&-1<n&&0==n%1&&n<=Cu;
}function Fr(n,t){return n===w?t:Eo(n,t,Fr)}function Nr(n,t){n=Br(n);for(var r=-1,e=t.length,u={};++r<e;){var o=t[r];o in n&&(u[o]=n[o])}return u}function Tr(n,t){var r={};return ht(n,function(n,e,u){t(n,e,u)&&(r[e]=n)}),r}function Lr(n){for(var t=Re(n),r=t.length,e=r&&n.length,u=!!e&&Sr(e)&&(Oo(n)||pe(n)),o=-1,i=[];++o<r;){var f=t[o];(u&&Cr(f,e)||nu.call(n,f))&&i.push(f)}return i}function zr(n){return null==n?[]:Er(n)?ge(n)?n:Ve(n):Ee(n)}function Br(n){return ge(n)?n:Ve(n)}function Dr(n){if(Oo(n))return n;
var t=[];return u(n).replace(mn,function(n,r,e,u){t.push(e?u.replace(An,"$1"):r||n)}),t}function Mr(n){return n instanceof zn?n.clone():new Ln(n.__wrapped__,n.__chain__,qn(n.__actions__))}function qr(n,t,r){return n&&n.length?((r?Ur(n,t,r):null==t)&&(t=1),Et(n,0>t?0:t)):[]}function Pr(n,t,r){var e=n?n.length:0;return e?((r?Ur(n,t,r):null==t)&&(t=1),t=e-(+t||0),Et(n,0,0>t?0:t)):[]}function Kr(n){return n?n[0]:w}function Vr(n,t,e){var u=n?n.length:0;if(!u)return-1;if(typeof e=="number")e=0>e?bu(u+e,0):e;else if(e)return e=Lt(n,t),
e<u&&(t===t?t===n[e]:n[e]!==n[e])?e:-1;return r(n,t,e||0)}function Zr(n){var t=n?n.length:0;return t?n[t-1]:w}function Yr(n){return qr(n,1)}function Gr(n,t,e,u){if(!n||!n.length)return[];null!=t&&typeof t!="boolean"&&(u=e,e=Ur(n,t,u)?w:t,t=false);var o=wr();if((null!=e||o!==ut)&&(e=o(e,u,3)),t&&xr()===r){t=e;var i;e=-1,u=n.length;for(var o=-1,f=[];++e<u;){var a=n[e],c=t?t(a,e,n):a;e&&i===c||(i=c,f[++o]=a)}n=f}else n=St(n,e);return n}function Jr(n){if(!n||!n.length)return[];var t=-1,r=0;n=Vn(n,function(n){
return Er(n)?(r=bu(n.length,r),true):void 0});for(var e=Be(r);++t<r;)e[t]=Gn(n,jt(t));return e}function Xr(n,t,r){return n&&n.length?(n=Jr(n),null==t?n:(t=Bt(t,r,4),Gn(n,function(n){return Xn(n,t,w,true)}))):[]}function Hr(n,t){var r=-1,e=n?n.length:0,u={};for(!e||t||Oo(n[0])||(t=[]);++r<e;){var o=n[r];t?u[o]=t[r]:o&&(u[o[0]]=o[1])}return u}function Qr(n){return n=Nn(n),n.__chain__=true,n}function ne(n,t,r){return t.call(r,n)}function te(n,t,r){var e=Oo(n)?Kn:at;return r&&Ur(n,t,r)&&(t=w),(typeof t!="function"||r!==w)&&(t=wr(t,r,3)),
e(n,t)}function re(n,t,r){var e=Oo(n)?Vn:lt;return t=wr(t,r,3),e(n,t)}function ee(n,t,r,e){var u=n?Bu(n):0;return Sr(u)||(n=Ee(n),u=n.length),r=typeof r!="number"||e&&Ur(t,r,e)?0:0>r?bu(u+r,0):r||0,typeof n=="string"||!Oo(n)&&be(n)?r<=u&&-1<n.indexOf(t,r):!!u&&-1<xr(n,t,r)}function ue(n,t,r){var e=Oo(n)?Gn:wt;return t=wr(t,r,3),e(n,t)}function oe(n,t,r){if(r?Ur(n,t,r):null==t){n=zr(n);var e=n.length;return 0<e?n[Rt(0,e-1)]:w}r=-1,n=je(n);var e=n.length,u=e-1;for(t=xu(0>t?0:+t||0,e);++r<t;){var e=Rt(r,u),o=n[e];
n[e]=n[r],n[r]=o}return n.length=t,n}function ie(n,t,r){var e=Oo(n)?Hn:Ct;return r&&Ur(n,t,r)&&(t=w),(typeof t!="function"||r!==w)&&(t=wr(t,r,3)),e(n,t)}function fe(n,t){var r;if(typeof t!="function"){if(typeof n!="function")throw new Ge(L);var e=n;n=t,t=e}return function(){return 0<--n&&(r=t.apply(this,arguments)),1>=n&&(t=w),r}}function ae(n,t,r){function e(t,r){r&&iu(r),a=p=h=w,t&&(_=ho(),c=n.apply(s,f),p||a||(f=s=w))}function u(){var n=t-(ho()-l);0>=n||n>t?e(h,a):p=su(u,n)}function o(){e(g,p);
}function i(){if(f=arguments,l=ho(),s=this,h=g&&(p||!y),false===v)var r=y&&!p;else{a||y||(_=l);var e=v-(l-_),i=0>=e||e>v;i?(a&&(a=iu(a)),_=l,c=n.apply(s,f)):a||(a=su(o,e))}return i&&p?p=iu(p):p||t===v||(p=su(u,t)),r&&(i=true,c=n.apply(s,f)),!i||p||a||(f=s=w),c}var f,a,c,l,s,p,h,_=0,v=false,g=true;if(typeof n!="function")throw new Ge(L);if(t=0>t?0:+t||0,true===r)var y=true,g=false;else ge(r)&&(y=!!r.leading,v="maxWait"in r&&bu(+r.maxWait||0,t),g="trailing"in r?!!r.trailing:g);return i.cancel=function(){p&&iu(p),a&&iu(a),
_=0,a=p=h=w},i}function ce(n,t){function r(){var e=arguments,u=t?t.apply(this,e):e[0],o=r.cache;return o.has(u)?o.get(u):(e=n.apply(this,e),r.cache=o.set(u,e),e)}if(typeof n!="function"||t&&typeof t!="function")throw new Ge(L);return r.cache=new ce.Cache,r}function le(n,t){if(typeof n!="function")throw new Ge(L);return t=bu(t===w?n.length-1:+t||0,0),function(){for(var r=arguments,e=-1,u=bu(r.length-t,0),o=Be(u);++e<u;)o[e]=r[t+e];switch(t){case 0:return n.call(this,o);case 1:return n.call(this,r[0],o);
case 2:return n.call(this,r[0],r[1],o)}for(u=Be(t+1),e=-1;++e<t;)u[e]=r[e];return u[t]=o,n.apply(this,u)}}function se(n,t){return n>t}function pe(n){return h(n)&&Er(n)&&nu.call(n,"callee")&&!cu.call(n,"callee")}function he(n,t,r,e){return e=(r=typeof r=="function"?Bt(r,e,3):w)?r(n,t):w,e===w?dt(n,t,r):!!e}function _e(n){return h(n)&&typeof n.message=="string"&&ru.call(n)==P}function ve(n){return ge(n)&&ru.call(n)==K}function ge(n){var t=typeof n;return!!n&&("object"==t||"function"==t)}function ye(n){
return null==n?false:ve(n)?uu.test(Qe.call(n)):h(n)&&Rn.test(n)}function de(n){return typeof n=="number"||h(n)&&ru.call(n)==V}function me(n){var t;if(!h(n)||ru.call(n)!=Z||pe(n)||!(nu.call(n,"constructor")||(t=n.constructor,typeof t!="function"||t instanceof t)))return false;var r;return ht(n,function(n,t){r=t}),r===w||nu.call(n,r)}function we(n){return ge(n)&&ru.call(n)==Y}function be(n){return typeof n=="string"||h(n)&&ru.call(n)==G}function xe(n){return h(n)&&Sr(n.length)&&!!Sn[ru.call(n)]}function Ae(n,t){
return n<t}function je(n){var t=n?Bu(n):0;return Sr(t)?t?qn(n):[]:Ee(n)}function ke(n){return et(n,Re(n))}function Ie(n){return gt(n,Re(n))}function Re(n){if(null==n)return[];ge(n)||(n=Ve(n));for(var t=n.length,t=t&&Sr(t)&&(Oo(n)||pe(n))&&t||0,r=n.constructor,e=-1,r=typeof r=="function"&&r.prototype===n,u=Be(t),o=0<t;++e<t;)u[e]=e+"";for(var i in n)o&&Cr(i,t)||"constructor"==i&&(r||!nu.call(n,i))||u.push(i);return u}function Oe(n){n=Br(n);for(var t=-1,r=zo(n),e=r.length,u=Be(e);++t<e;){var o=r[t];
u[t]=[o,n[o]]}return u}function Ee(n){return Ft(n,zo(n))}function Ce(n){return(n=u(n))&&n.replace(En,a).replace(xn,"")}function Ue(n,t){var r="";if(n=u(n),t=+t,1>t||!n||!mu(t))return r;do t%2&&(r+=n),t=yu(t/2),n+=n;while(t);return r}function We(n,t,r){var e=n;return(n=u(n))?(r?Ur(e,t,r):null==t)?n.slice(g(n),y(n)+1):(t+="",n.slice(o(n,t),i(n,t)+1)):n}function $e(n,t,r){return r&&Ur(n,t,r)&&(t=w),n=u(n),n.match(t||Wn)||[]}function Se(n,t,r){return r&&Ur(n,t,r)&&(t=w),h(n)?Ne(n):ut(n,t)}function Fe(n){
return n}function Ne(n){return bt(ot(n,true))}function Te(n,t,r){if(null==r){var e=ge(t),u=e?zo(t):w;((u=u&&u.length?gt(t,u):w)?u.length:e)||(u=false,r=t,t=n,n=this)}u||(u=gt(t,zo(t)));var o=true,e=-1,i=ve(n),f=u.length;false===r?o=false:ge(r)&&"chain"in r&&(o=r.chain);for(;++e<f;){r=u[e];var a=t[r];n[r]=a,i&&(n.prototype[r]=function(t){return function(){var r=this.__chain__;if(o||r){var e=n(this.__wrapped__);return(e.__actions__=qn(this.__actions__)).push({func:t,args:arguments,thisArg:n}),e.__chain__=r,e}return t.apply(n,Jn([this.value()],arguments));
}}(a))}return n}function Le(){}function ze(n){return Wr(n)?jt(n):kt(n)}_=_?Yn.defaults(Zn.Object(),_,Yn.pick(Zn,$n)):Zn;var Be=_.Array,De=_.Date,Me=_.Error,qe=_.Function,Pe=_.Math,Ke=_.Number,Ve=_.Object,Ze=_.RegExp,Ye=_.String,Ge=_.TypeError,Je=Be.prototype,Xe=Ve.prototype,He=Ye.prototype,Qe=qe.prototype.toString,nu=Xe.hasOwnProperty,tu=0,ru=Xe.toString,eu=Zn._,uu=Ze("^"+Qe.call(nu).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),ou=_.ArrayBuffer,iu=_.clearTimeout,fu=_.parseFloat,au=Pe.pow,cu=Xe.propertyIsEnumerable,lu=jr(_,"Set"),su=_.setTimeout,pu=Je.splice,hu=_.Uint8Array,_u=jr(_,"WeakMap"),vu=Pe.ceil,gu=jr(Ve,"create"),yu=Pe.floor,du=jr(Be,"isArray"),mu=_.isFinite,wu=jr(Ve,"keys"),bu=Pe.max,xu=Pe.min,Au=jr(De,"now"),ju=_.parseInt,ku=Pe.random,Iu=Ke.NEGATIVE_INFINITY,Ru=Ke.POSITIVE_INFINITY,Ou=4294967294,Eu=2147483647,Cu=9007199254740991,Uu=_u&&new _u,Wu={};
Nn.support={},Nn.templateSettings={escape:_n,evaluate:vn,interpolate:gn,variable:"",imports:{_:Nn}};var $u=function(){function n(){}return function(t){if(ge(t)){n.prototype=t;var r=new n;n.prototype=w}return r||{}}}(),Su=Vt(_t),Fu=Vt(vt,true),Nu=Zt(),Tu=Zt(true),Lu=Uu?function(n,t){return Uu.set(n,t),n}:Fe,zu=Uu?function(n){return Uu.get(n)}:Le,Bu=jt("length"),Du=function(){var n=0,t=0;return function(r,e){var u=ho(),o=S-(u-t);if(t=u,0<o){if(++n>=$)return r}else n=0;return Lu(r,e)}}(),Mu=le(function(n,t){
return h(n)&&Er(n)?ft(n,pt(t,false,true)):[]}),qu=tr(),Pu=tr(true),Ku=le(function(n){for(var t=n.length,e=t,u=Be(l),o=xr(),i=o===r,f=[];e--;){var a=n[e]=Er(a=n[e])?a:[];u[e]=i&&120<=a.length&&gu&&lu?new Dn(e&&a):null}var i=n[0],c=-1,l=i?i.length:0,s=u[0];n:for(;++c<l;)if(a=i[c],0>(s?Mn(s,a):o(f,a,0))){for(e=t;--e;){var p=u[e];if(0>(p?Mn(p,a):o(n[e],a,0)))continue n}s&&s.push(a),f.push(a)}return f}),Vu=le(function(t,r){r=pt(r);var e=rt(t,r);return It(t,r.sort(n)),e}),Zu=vr(),Yu=vr(true),Gu=le(function(n){return St(pt(n,false,true));
}),Ju=le(function(n,t){return Er(n)?ft(n,t):[]}),Xu=le(Jr),Hu=le(function(n){var t=n.length,r=2<t?n[t-2]:w,e=1<t?n[t-1]:w;return 2<t&&typeof r=="function"?t-=2:(r=1<t&&typeof e=="function"?(--t,e):w,e=w),n.length=t,Xr(n,r,e)}),Qu=le(function(n){return n=pt(n),this.thru(function(t){t=Oo(t)?t:[Br(t)];for(var r=n,e=-1,u=t.length,o=-1,i=r.length,f=Be(u+i);++e<u;)f[e]=t[e];for(;++o<i;)f[e++]=r[o];return f})}),no=le(function(n,t){return rt(n,pt(t))}),to=Pt(function(n,t,r){nu.call(n,r)?++n[r]:n[r]=1}),ro=nr(Su),eo=nr(Fu,true),uo=ur(Pn,Su),oo=ur(function(n,t){
for(var r=n.length;r--&&false!==t(n[r],r,n););return n},Fu),io=Pt(function(n,t,r){nu.call(n,r)?n[r].push(t):n[r]=[t]}),fo=Pt(function(n,t,r){n[r]=t}),ao=le(function(n,t,r){var e=-1,u=typeof t=="function",o=Wr(t),i=Er(n)?Be(n.length):[];return Su(n,function(n){var f=u?t:o&&null!=n?n[t]:w;i[++e]=f?f.apply(n,r):Or(n,t,r)}),i}),co=Pt(function(n,t,r){n[r?0:1].push(t)},function(){return[[],[]]}),lo=lr(Xn,Su),so=lr(function(n,t,r,e){var u=n.length;for(e&&u&&(r=n[--u]);u--;)r=t(r,n[u],u,n);return r},Fu),po=le(function(n,t){
if(null==n)return[];var r=t[2];return r&&Ur(t[0],t[1],r)&&(t.length=1),Wt(n,pt(t),[])}),ho=Au||function(){return(new De).getTime()},_o=le(function(n,t,r){var e=x;if(r.length)var u=v(r,_o.placeholder),e=e|R;return gr(n,e,t,r,u)}),vo=le(function(n,t){t=t.length?pt(t):Ie(n);for(var r=-1,e=t.length;++r<e;){var u=t[r];n[u]=gr(n[u],x,n)}return n}),go=le(function(n,t,r){var e=x|A;if(r.length)var u=v(r,go.placeholder),e=e|R;return gr(t,e,n,r,u)}),yo=Xt(k),mo=Xt(I),wo=le(function(n,t){return it(n,1,t)}),bo=le(function(n,t,r){
return it(n,t,r)}),xo=er(),Ao=er(true),jo=le(function(n,t){if(t=pt(t),typeof n!="function"||!Kn(t,e))throw new Ge(L);var r=t.length;return le(function(e){for(var u=xu(e.length,r);u--;)e[u]=t[u](e[u]);return n.apply(this,e)})}),ko=cr(R),Io=cr(O),Ro=le(function(n,t){return gr(n,C,w,w,w,pt(t))}),Oo=du||function(n){return h(n)&&Sr(n.length)&&ru.call(n)==D},Eo=Kt(At),Co=Kt(function(n,t,r){return r?nt(n,t,r):tt(n,t)}),Uo=Ht(Co,function(n,t){return n===w?t:n}),Wo=Ht(Eo,Fr),$o=rr(_t),So=rr(vt),Fo=or(Nu),No=or(Tu),To=ir(_t),Lo=ir(vt),zo=wu?function(n){
var t=null==n?w:n.constructor;return typeof t=="function"&&t.prototype===n||typeof n!="function"&&Er(n)?Lr(n):ge(n)?wu(n):[]}:Lr,Bo=fr(true),Do=fr(),Mo=le(function(n,t){if(null==n)return{};if("function"!=typeof t[0])return t=Gn(pt(t),Ye),Nr(n,ft(Re(n),t));var r=Bt(t[0],t[1],3);return Tr(n,function(n,t,e){return!r(n,t,e)})}),qo=le(function(n,t){return null==n?{}:"function"==typeof t[0]?Tr(n,Bt(t[0],t[1],3)):Nr(n,pt(t))}),Po=Gt(function(n,t,r){return t=t.toLowerCase(),n+(r?t.charAt(0).toUpperCase()+t.slice(1):t);
}),Ko=Gt(function(n,t,r){return n+(r?"-":"")+t.toLowerCase()}),Vo=ar(),Zo=ar(true),Yo=Gt(function(n,t,r){return n+(r?"_":"")+t.toLowerCase()}),Go=Gt(function(n,t,r){return n+(r?" ":"")+(t.charAt(0).toUpperCase()+t.slice(1))}),Jo=le(function(n,t){try{return n.apply(w,t)}catch(r){return _e(r)?r:new Me(r)}}),Xo=le(function(n,t){return function(r){return Or(r,n,t)}}),Ho=le(function(n,t){return function(r){return Or(n,r,t)}}),Qo=_r("ceil"),ni=_r("floor"),ti=Qt(se,Iu),ri=Qt(Ae,Ru),ei=_r("round");return Nn.prototype=Tn.prototype,
Ln.prototype=$u(Tn.prototype),Ln.prototype.constructor=Ln,zn.prototype=$u(Tn.prototype),zn.prototype.constructor=zn,Bn.prototype["delete"]=function(n){return this.has(n)&&delete this.__data__[n]},Bn.prototype.get=function(n){return"__proto__"==n?w:this.__data__[n]},Bn.prototype.has=function(n){return"__proto__"!=n&&nu.call(this.__data__,n)},Bn.prototype.set=function(n,t){return"__proto__"!=n&&(this.__data__[n]=t),this},Dn.prototype.push=function(n){var t=this.data;typeof n=="string"||ge(n)?t.set.add(n):t.hash[n]=true;
},ce.Cache=Bn,Nn.after=function(n,t){if(typeof t!="function"){if(typeof n!="function")throw new Ge(L);var r=n;n=t,t=r}return n=mu(n=+n)?n:0,function(){return 1>--n?t.apply(this,arguments):void 0}},Nn.ary=function(n,t,r){return r&&Ur(n,t,r)&&(t=w),t=n&&null==t?n.length:bu(+t||0,0),gr(n,E,w,w,w,w,t)},Nn.assign=Co,Nn.at=no,Nn.before=fe,Nn.bind=_o,Nn.bindAll=vo,Nn.bindKey=go,Nn.callback=Se,Nn.chain=Qr,Nn.chunk=function(n,t,r){t=(r?Ur(n,t,r):null==t)?1:bu(yu(t)||1,1),r=0;for(var e=n?n.length:0,u=-1,o=Be(vu(e/t));r<e;)o[++u]=Et(n,r,r+=t);
return o},Nn.compact=function(n){for(var t=-1,r=n?n.length:0,e=-1,u=[];++t<r;){var o=n[t];o&&(u[++e]=o)}return u},Nn.constant=function(n){return function(){return n}},Nn.countBy=to,Nn.create=function(n,t,r){var e=$u(n);return r&&Ur(n,t,r)&&(t=w),t?tt(e,t):e},Nn.curry=yo,Nn.curryRight=mo,Nn.debounce=ae,Nn.defaults=Uo,Nn.defaultsDeep=Wo,Nn.defer=wo,Nn.delay=bo,Nn.difference=Mu,Nn.drop=qr,Nn.dropRight=Pr,Nn.dropRightWhile=function(n,t,r){return n&&n.length?Nt(n,wr(t,r,3),true,true):[]},Nn.dropWhile=function(n,t,r){
return n&&n.length?Nt(n,wr(t,r,3),true):[]},Nn.fill=function(n,t,r,e){var u=n?n.length:0;if(!u)return[];for(r&&typeof r!="number"&&Ur(n,t,r)&&(r=0,e=u),u=n.length,r=null==r?0:+r||0,0>r&&(r=-r>u?0:u+r),e=e===w||e>u?u:+e||0,0>e&&(e+=u),u=r>e?0:e>>>0,r>>>=0;r<u;)n[r++]=t;return n},Nn.filter=re,Nn.flatten=function(n,t,r){var e=n?n.length:0;return r&&Ur(n,t,r)&&(t=false),e?pt(n,t):[]},Nn.flattenDeep=function(n){return n&&n.length?pt(n,true):[]},Nn.flow=xo,Nn.flowRight=Ao,Nn.forEach=uo,Nn.forEachRight=oo,Nn.forIn=Fo,
Nn.forInRight=No,Nn.forOwn=To,Nn.forOwnRight=Lo,Nn.functions=Ie,Nn.groupBy=io,Nn.indexBy=fo,Nn.initial=function(n){return Pr(n,1)},Nn.intersection=Ku,Nn.invert=function(n,t,r){r&&Ur(n,t,r)&&(t=w),r=-1;for(var e=zo(n),u=e.length,o={};++r<u;){var i=e[r],f=n[i];t?nu.call(o,f)?o[f].push(i):o[f]=[i]:o[f]=i}return o},Nn.invoke=ao,Nn.keys=zo,Nn.keysIn=Re,Nn.map=ue,Nn.mapKeys=Bo,Nn.mapValues=Do,Nn.matches=Ne,Nn.matchesProperty=function(n,t){return xt(n,ot(t,true))},Nn.memoize=ce,Nn.merge=Eo,Nn.method=Xo,Nn.methodOf=Ho,
Nn.mixin=Te,Nn.modArgs=jo,Nn.negate=function(n){if(typeof n!="function")throw new Ge(L);return function(){return!n.apply(this,arguments)}},Nn.omit=Mo,Nn.once=function(n){return fe(2,n)},Nn.pairs=Oe,Nn.partial=ko,Nn.partialRight=Io,Nn.partition=co,Nn.pick=qo,Nn.pluck=function(n,t){return ue(n,ze(t))},Nn.property=ze,Nn.propertyOf=function(n){return function(t){return yt(n,Dr(t),t+"")}},Nn.pull=function(){var n=arguments,t=n[0];if(!t||!t.length)return t;for(var r=0,e=xr(),u=n.length;++r<u;)for(var o=0,i=n[r];-1<(o=e(t,i,o));)pu.call(t,o,1);
return t},Nn.pullAt=Vu,Nn.range=function(n,t,r){r&&Ur(n,t,r)&&(t=r=w),n=+n||0,r=null==r?1:+r||0,null==t?(t=n,n=0):t=+t||0;var e=-1;t=bu(vu((t-n)/(r||1)),0);for(var u=Be(t);++e<t;)u[e]=n,n+=r;return u},Nn.rearg=Ro,Nn.reject=function(n,t,r){var e=Oo(n)?Vn:lt;return t=wr(t,r,3),e(n,function(n,r,e){return!t(n,r,e)})},Nn.remove=function(n,t,r){var e=[];if(!n||!n.length)return e;var u=-1,o=[],i=n.length;for(t=wr(t,r,3);++u<i;)r=n[u],t(r,u,n)&&(e.push(r),o.push(u));return It(n,o),e},Nn.rest=Yr,Nn.restParam=le,
Nn.set=function(n,t,r){if(null==n)return n;var e=t+"";t=null!=n[e]||Wr(t,n)?[e]:Dr(t);for(var e=-1,u=t.length,o=u-1,i=n;null!=i&&++e<u;){var f=t[e];ge(i)&&(e==o?i[f]=r:null==i[f]&&(i[f]=Cr(t[e+1])?[]:{})),i=i[f]}return n},Nn.shuffle=function(n){return oe(n,Ru)},Nn.slice=function(n,t,r){var e=n?n.length:0;return e?(r&&typeof r!="number"&&Ur(n,t,r)&&(t=0,r=e),Et(n,t,r)):[]},Nn.sortBy=function(n,t,r){if(null==n)return[];r&&Ur(n,t,r)&&(t=w);var e=-1;return t=wr(t,r,3),n=wt(n,function(n,r,u){return{a:t(n,r,u),
b:++e,c:n}}),Ut(n,f)},Nn.sortByAll=po,Nn.sortByOrder=function(n,t,r,e){return null==n?[]:(e&&Ur(t,r,e)&&(r=w),Oo(t)||(t=null==t?[]:[t]),Oo(r)||(r=null==r?[]:[r]),Wt(n,t,r))},Nn.spread=function(n){if(typeof n!="function")throw new Ge(L);return function(t){return n.apply(this,t)}},Nn.take=function(n,t,r){return n&&n.length?((r?Ur(n,t,r):null==t)&&(t=1),Et(n,0,0>t?0:t)):[]},Nn.takeRight=function(n,t,r){var e=n?n.length:0;return e?((r?Ur(n,t,r):null==t)&&(t=1),t=e-(+t||0),Et(n,0>t?0:t)):[]},Nn.takeRightWhile=function(n,t,r){
return n&&n.length?Nt(n,wr(t,r,3),false,true):[]},Nn.takeWhile=function(n,t,r){return n&&n.length?Nt(n,wr(t,r,3)):[]},Nn.tap=function(n,t,r){return t.call(r,n),n},Nn.throttle=function(n,t,r){var e=true,u=true;if(typeof n!="function")throw new Ge(L);return false===r?e=false:ge(r)&&(e="leading"in r?!!r.leading:e,u="trailing"in r?!!r.trailing:u),ae(n,t,{leading:e,maxWait:+t,trailing:u})},Nn.thru=ne,Nn.times=function(n,t,r){if(n=yu(n),1>n||!mu(n))return[];var e=-1,u=Be(xu(n,4294967295));for(t=Bt(t,r,1);++e<n;)4294967295>e?u[e]=t(e):t(e);
return u},Nn.toArray=je,Nn.toPlainObject=ke,Nn.transform=function(n,t,r,e){var u=Oo(n)||xe(n);return t=wr(t,e,4),null==r&&(u||ge(n)?(e=n.constructor,r=u?Oo(n)?new e:[]:$u(ve(e)?e.prototype:w)):r={}),(u?Pn:_t)(n,function(n,e,u){return t(r,n,e,u)}),r},Nn.union=Gu,Nn.uniq=Gr,Nn.unzip=Jr,Nn.unzipWith=Xr,Nn.values=Ee,Nn.valuesIn=function(n){return Ft(n,Re(n))},Nn.where=function(n,t){return re(n,bt(t))},Nn.without=Ju,Nn.wrap=function(n,t){return t=null==t?Fe:t,gr(t,R,w,[n],[])},Nn.xor=function(){for(var n=-1,t=arguments.length;++n<t;){
var r=arguments[n];if(Er(r))var e=e?Jn(ft(e,r),ft(r,e)):r}return e?St(e):[]},Nn.zip=Xu,Nn.zipObject=Hr,Nn.zipWith=Hu,Nn.backflow=Ao,Nn.collect=ue,Nn.compose=Ao,Nn.each=uo,Nn.eachRight=oo,Nn.extend=Co,Nn.iteratee=Se,Nn.methods=Ie,Nn.object=Hr,Nn.select=re,Nn.tail=Yr,Nn.unique=Gr,Te(Nn,Nn),Nn.add=function(n,t){return(+n||0)+(+t||0)},Nn.attempt=Jo,Nn.camelCase=Po,Nn.capitalize=function(n){return(n=u(n))&&n.charAt(0).toUpperCase()+n.slice(1)},Nn.ceil=Qo,Nn.clone=function(n,t,r,e){return t&&typeof t!="boolean"&&Ur(n,t,r)?t=false:typeof t=="function"&&(e=r,
r=t,t=false),typeof r=="function"?ot(n,t,Bt(r,e,3)):ot(n,t)},Nn.cloneDeep=function(n,t,r){return typeof t=="function"?ot(n,true,Bt(t,r,3)):ot(n,true)},Nn.deburr=Ce,Nn.endsWith=function(n,t,r){n=u(n),t+="";var e=n.length;return r=r===w?e:xu(0>r?0:+r||0,e),r-=t.length,0<=r&&n.indexOf(t,r)==r},Nn.escape=function(n){return(n=u(n))&&hn.test(n)?n.replace(sn,c):n},Nn.escapeRegExp=function(n){return(n=u(n))&&bn.test(n)?n.replace(wn,l):n||"(?:)"},Nn.every=te,Nn.find=ro,Nn.findIndex=qu,Nn.findKey=$o,Nn.findLast=eo,
Nn.findLastIndex=Pu,Nn.findLastKey=So,Nn.findWhere=function(n,t){return ro(n,bt(t))},Nn.first=Kr,Nn.floor=ni,Nn.get=function(n,t,r){return n=null==n?w:yt(n,Dr(t),t+""),n===w?r:n},Nn.gt=se,Nn.gte=function(n,t){return n>=t},Nn.has=function(n,t){if(null==n)return false;var r=nu.call(n,t);if(!r&&!Wr(t)){if(t=Dr(t),n=1==t.length?n:yt(n,Et(t,0,-1)),null==n)return false;t=Zr(t),r=nu.call(n,t)}return r||Sr(n.length)&&Cr(t,n.length)&&(Oo(n)||pe(n))},Nn.identity=Fe,Nn.includes=ee,Nn.indexOf=Vr,Nn.inRange=function(n,t,r){
return t=+t||0,r===w?(r=t,t=0):r=+r||0,n>=xu(t,r)&&n<bu(t,r)},Nn.isArguments=pe,Nn.isArray=Oo,Nn.isBoolean=function(n){return true===n||false===n||h(n)&&ru.call(n)==M},Nn.isDate=function(n){return h(n)&&ru.call(n)==q},Nn.isElement=function(n){return!!n&&1===n.nodeType&&h(n)&&!me(n)},Nn.isEmpty=function(n){return null==n?true:Er(n)&&(Oo(n)||be(n)||pe(n)||h(n)&&ve(n.splice))?!n.length:!zo(n).length},Nn.isEqual=he,Nn.isError=_e,Nn.isFinite=function(n){return typeof n=="number"&&mu(n)},Nn.isFunction=ve,Nn.isMatch=function(n,t,r,e){
return r=typeof r=="function"?Bt(r,e,3):w,mt(n,Ar(t),r)},Nn.isNaN=function(n){return de(n)&&n!=+n},Nn.isNative=ye,Nn.isNull=function(n){return null===n},Nn.isNumber=de,Nn.isObject=ge,Nn.isPlainObject=me,Nn.isRegExp=we,Nn.isString=be,Nn.isTypedArray=xe,Nn.isUndefined=function(n){return n===w},Nn.kebabCase=Ko,Nn.last=Zr,Nn.lastIndexOf=function(n,t,r){var e=n?n.length:0;if(!e)return-1;var u=e;if(typeof r=="number")u=(0>r?bu(e+r,0):xu(r||0,e-1))+1;else if(r)return u=Lt(n,t,true)-1,n=n[u],(t===t?t===n:n!==n)?u:-1;
if(t!==t)return p(n,u,true);for(;u--;)if(n[u]===t)return u;return-1},Nn.lt=Ae,Nn.lte=function(n,t){return n<=t},Nn.max=ti,Nn.min=ri,Nn.noConflict=function(){return Zn._=eu,this},Nn.noop=Le,Nn.now=ho,Nn.pad=function(n,t,r){n=u(n),t=+t;var e=n.length;return e<t&&mu(t)?(e=(t-e)/2,t=yu(e),e=vu(e),r=pr("",e,r),r.slice(0,t)+n+r):n},Nn.padLeft=Vo,Nn.padRight=Zo,Nn.parseInt=function(n,t,r){return(r?Ur(n,t,r):null==t)?t=0:t&&(t=+t),n=We(n),ju(n,t||(In.test(n)?16:10))},Nn.random=function(n,t,r){r&&Ur(n,t,r)&&(t=r=w);
var e=null==n,u=null==t;return null==r&&(u&&typeof n=="boolean"?(r=n,n=1):typeof t=="boolean"&&(r=t,u=true)),e&&u&&(t=1,u=false),n=+n||0,u?(t=n,n=0):t=+t||0,r||n%1||t%1?(r=ku(),xu(n+r*(t-n+fu("1e-"+((r+"").length-1))),t)):Rt(n,t)},Nn.reduce=lo,Nn.reduceRight=so,Nn.repeat=Ue,Nn.result=function(n,t,r){var e=null==n?w:n[t];return e===w&&(null==n||Wr(t,n)||(t=Dr(t),n=1==t.length?n:yt(n,Et(t,0,-1)),e=null==n?w:n[Zr(t)]),e=e===w?r:e),ve(e)?e.call(n):e},Nn.round=ei,Nn.runInContext=m,Nn.size=function(n){var t=n?Bu(n):0;
return Sr(t)?t:zo(n).length},Nn.snakeCase=Yo,Nn.some=ie,Nn.sortedIndex=Zu,Nn.sortedLastIndex=Yu,Nn.startCase=Go,Nn.startsWith=function(n,t,r){return n=u(n),r=null==r?0:xu(0>r?0:+r||0,n.length),n.lastIndexOf(t,r)==r},Nn.sum=function(n,t,r){if(r&&Ur(n,t,r)&&(t=w),t=wr(t,r,3),1==t.length){n=Oo(n)?n:zr(n),r=n.length;for(var e=0;r--;)e+=+t(n[r])||0;n=e}else n=$t(n,t);return n},Nn.template=function(n,t,r){var e=Nn.templateSettings;r&&Ur(n,t,r)&&(t=r=w),n=u(n),t=nt(tt({},r||t),e,Qn),r=nt(tt({},t.imports),e.imports,Qn);
var o,i,f=zo(r),a=Ft(r,f),c=0;r=t.interpolate||Cn;var l="__p+='";r=Ze((t.escape||Cn).source+"|"+r.source+"|"+(r===gn?jn:Cn).source+"|"+(t.evaluate||Cn).source+"|$","g");var p="sourceURL"in t?"//# sourceURL="+t.sourceURL+"\n":"";if(n.replace(r,function(t,r,e,u,f,a){return e||(e=u),l+=n.slice(c,a).replace(Un,s),r&&(o=true,l+="'+__e("+r+")+'"),f&&(i=true,l+="';"+f+";\n__p+='"),e&&(l+="'+((__t=("+e+"))==null?'':__t)+'"),c=a+t.length,t}),l+="';",(t=t.variable)||(l="with(obj){"+l+"}"),l=(i?l.replace(fn,""):l).replace(an,"$1").replace(cn,"$1;"),
l="function("+(t||"obj")+"){"+(t?"":"obj||(obj={});")+"var __t,__p=''"+(o?",__e=_.escape":"")+(i?",__j=Array.prototype.join;function print(){__p+=__j.call(arguments,'')}":";")+l+"return __p}",t=Jo(function(){return qe(f,p+"return "+l).apply(w,a)}),t.source=l,_e(t))throw t;return t},Nn.trim=We,Nn.trimLeft=function(n,t,r){var e=n;return(n=u(n))?n.slice((r?Ur(e,t,r):null==t)?g(n):o(n,t+"")):n},Nn.trimRight=function(n,t,r){var e=n;return(n=u(n))?(r?Ur(e,t,r):null==t)?n.slice(0,y(n)+1):n.slice(0,i(n,t+"")+1):n;
},Nn.trunc=function(n,t,r){r&&Ur(n,t,r)&&(t=w);var e=U;if(r=W,null!=t)if(ge(t)){var o="separator"in t?t.separator:o,e="length"in t?+t.length||0:e;r="omission"in t?u(t.omission):r}else e=+t||0;if(n=u(n),e>=n.length)return n;if(e-=r.length,1>e)return r;if(t=n.slice(0,e),null==o)return t+r;if(we(o)){if(n.slice(e).search(o)){var i,f=n.slice(0,e);for(o.global||(o=Ze(o.source,(kn.exec(o)||"")+"g")),o.lastIndex=0;n=o.exec(f);)i=n.index;t=t.slice(0,null==i?e:i)}}else n.indexOf(o,e)!=e&&(o=t.lastIndexOf(o),
-1<o&&(t=t.slice(0,o)));return t+r},Nn.unescape=function(n){return(n=u(n))&&pn.test(n)?n.replace(ln,d):n},Nn.uniqueId=function(n){var t=++tu;return u(n)+t},Nn.words=$e,Nn.all=te,Nn.any=ie,Nn.contains=ee,Nn.eq=he,Nn.detect=ro,Nn.foldl=lo,Nn.foldr=so,Nn.head=Kr,Nn.include=ee,Nn.inject=lo,Te(Nn,function(){var n={};return _t(Nn,function(t,r){Nn.prototype[r]||(n[r]=t)}),n}(),false),Nn.sample=oe,Nn.prototype.sample=function(n){return this.__chain__||null!=n?this.thru(function(t){return oe(t,n)}):oe(this.value());
},Nn.VERSION=b,Pn("bind bindKey curry curryRight partial partialRight".split(" "),function(n){Nn[n].placeholder=Nn}),Pn(["drop","take"],function(n,t){zn.prototype[n]=function(r){var e=this.__filtered__;if(e&&!t)return new zn(this);r=null==r?1:bu(yu(r)||0,0);var u=this.clone();return e?u.__takeCount__=xu(u.__takeCount__,r):u.__views__.push({size:r,type:n+(0>u.__dir__?"Right":"")}),u},zn.prototype[n+"Right"]=function(t){return this.reverse()[n](t).reverse()}}),Pn(["filter","map","takeWhile"],function(n,t){
var r=t+1,e=r!=T;zn.prototype[n]=function(n,t){var u=this.clone();return u.__iteratees__.push({iteratee:wr(n,t,1),type:r}),u.__filtered__=u.__filtered__||e,u}}),Pn(["first","last"],function(n,t){var r="take"+(t?"Right":"");zn.prototype[n]=function(){return this[r](1).value()[0]}}),Pn(["initial","rest"],function(n,t){var r="drop"+(t?"":"Right");zn.prototype[n]=function(){return this.__filtered__?new zn(this):this[r](1)}}),Pn(["pluck","where"],function(n,t){var r=t?"filter":"map",e=t?bt:ze;zn.prototype[n]=function(n){
return this[r](e(n))}}),zn.prototype.compact=function(){return this.filter(Fe)},zn.prototype.reject=function(n,t){return n=wr(n,t,1),this.filter(function(t){return!n(t)})},zn.prototype.slice=function(n,t){n=null==n?0:+n||0;var r=this;return r.__filtered__&&(0<n||0>t)?new zn(r):(0>n?r=r.takeRight(-n):n&&(r=r.drop(n)),t!==w&&(t=+t||0,r=0>t?r.dropRight(-t):r.take(t-n)),r)},zn.prototype.takeRightWhile=function(n,t){return this.reverse().takeWhile(n,t).reverse()},zn.prototype.toArray=function(){return this.take(Ru);
},_t(zn.prototype,function(n,t){var r=/^(?:filter|map|reject)|While$/.test(t),e=/^(?:first|last)$/.test(t),u=Nn[e?"take"+("last"==t?"Right":""):t];u&&(Nn.prototype[t]=function(){function t(n){return e&&i?u(n,1)[0]:u.apply(w,Jn([n],o))}var o=e?[1]:arguments,i=this.__chain__,f=this.__wrapped__,a=!!this.__actions__.length,c=f instanceof zn,l=o[0],s=c||Oo(f);return s&&r&&typeof l=="function"&&1!=l.length&&(c=s=false),l={func:ne,args:[t],thisArg:w},a=c&&!a,e&&!i?a?(f=f.clone(),f.__actions__.push(l),n.call(f)):u.call(w,this.value())[0]:!e&&s?(f=a?f:new zn(this),
f=n.apply(f,o),f.__actions__.push(l),new Ln(f,i)):this.thru(t)})}),Pn("join pop push replace shift sort splice split unshift".split(" "),function(n){var t=(/^(?:replace|split)$/.test(n)?He:Je)[n],r=/^(?:push|sort|unshift)$/.test(n)?"tap":"thru",e=/^(?:join|pop|replace|shift)$/.test(n);Nn.prototype[n]=function(){var n=arguments;return e&&!this.__chain__?t.apply(this.value(),n):this[r](function(r){return t.apply(r,n)})}}),_t(zn.prototype,function(n,t){var r=Nn[t];if(r){var e=r.name+"";(Wu[e]||(Wu[e]=[])).push({
name:t,func:r})}}),Wu[sr(w,A).name]=[{name:"wrapper",func:w}],zn.prototype.clone=function(){var n=new zn(this.__wrapped__);return n.__actions__=qn(this.__actions__),n.__dir__=this.__dir__,n.__filtered__=this.__filtered__,n.__iteratees__=qn(this.__iteratees__),n.__takeCount__=this.__takeCount__,n.__views__=qn(this.__views__),n},zn.prototype.reverse=function(){if(this.__filtered__){var n=new zn(this);n.__dir__=-1,n.__filtered__=true}else n=this.clone(),n.__dir__*=-1;return n},zn.prototype.value=function(){
var n,t=this.__wrapped__.value(),r=this.__dir__,e=Oo(t),u=0>r,o=e?t.length:0;n=o;for(var i=this.__views__,f=0,a=-1,c=i.length;++a<c;){var l=i[a],s=l.size;switch(l.type){case"drop":f+=s;break;case"dropRight":n-=s;break;case"take":n=xu(n,f+s);break;case"takeRight":f=bu(f,n-s)}}if(n={start:f,end:n},i=n.start,f=n.end,n=f-i,u=u?f:i-1,i=this.__iteratees__,f=i.length,a=0,c=xu(n,this.__takeCount__),!e||o<F||o==n&&c==n)return Tt(t,this.__actions__);e=[];n:for(;n--&&a<c;){for(u+=r,o=-1,l=t[u];++o<f;){var p=i[o],s=p.type,p=p.iteratee(l);
if(s==T)l=p;else if(!p){if(s==N)continue n;break n}}e[a++]=l}return e},Nn.prototype.chain=function(){return Qr(this)},Nn.prototype.commit=function(){return new Ln(this.value(),this.__chain__)},Nn.prototype.concat=Qu,Nn.prototype.plant=function(n){for(var t,r=this;r instanceof Tn;){var e=Mr(r);t?u.__wrapped__=e:t=e;var u=e,r=r.__wrapped__}return u.__wrapped__=n,t},Nn.prototype.reverse=function(){function n(n){return n.reverse()}var t=this.__wrapped__;return t instanceof zn?(this.__actions__.length&&(t=new zn(this)),
t=t.reverse(),t.__actions__.push({func:ne,args:[n],thisArg:w}),new Ln(t,this.__chain__)):this.thru(n)},Nn.prototype.toString=function(){return this.value()+""},Nn.prototype.run=Nn.prototype.toJSON=Nn.prototype.valueOf=Nn.prototype.value=function(){return Tt(this.__wrapped__,this.__actions__)},Nn.prototype.collect=Nn.prototype.map,Nn.prototype.head=Nn.prototype.first,Nn.prototype.select=Nn.prototype.filter,Nn.prototype.tail=Nn.prototype.rest,Nn}var w,b="3.10.1",x=1,A=2,j=4,k=8,I=16,R=32,O=64,E=128,C=256,U=30,W="...",$=150,S=16,F=200,N=1,T=2,L="Expected a function",z="__lodash_placeholder__",B="[object Arguments]",D="[object Array]",M="[object Boolean]",q="[object Date]",P="[object Error]",K="[object Function]",V="[object Number]",Z="[object Object]",Y="[object RegExp]",G="[object String]",J="[object ArrayBuffer]",X="[object Float32Array]",H="[object Float64Array]",Q="[object Int8Array]",nn="[object Int16Array]",tn="[object Int32Array]",rn="[object Uint8Array]",en="[object Uint8ClampedArray]",un="[object Uint16Array]",on="[object Uint32Array]",fn=/\b__p\+='';/g,an=/\b(__p\+=)''\+/g,cn=/(__e\(.*?\)|\b__t\))\+'';/g,ln=/&(?:amp|lt|gt|quot|#39|#96);/g,sn=/[&<>"'`]/g,pn=RegExp(ln.source),hn=RegExp(sn.source),_n=/<%-([\s\S]+?)%>/g,vn=/<%([\s\S]+?)%>/g,gn=/<%=([\s\S]+?)%>/g,yn=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\n\\]|\\.)*?\1)\]/,dn=/^\w*$/,mn=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\n\\]|\\.)*?)\2)\]/g,wn=/^[:!,]|[\\^$.*+?()[\]{}|\/]|(^[0-9a-fA-Fnrtuvx])|([\n\r\u2028\u2029])/g,bn=RegExp(wn.source),xn=/[\u0300-\u036f\ufe20-\ufe23]/g,An=/\\(\\)?/g,jn=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,kn=/\w*$/,In=/^0[xX]/,Rn=/^\[object .+?Constructor\]$/,On=/^\d+$/,En=/[\xc0-\xd6\xd8-\xde\xdf-\xf6\xf8-\xff]/g,Cn=/($^)/,Un=/['\n\r\u2028\u2029\\]/g,Wn=RegExp("[A-Z\\xc0-\\xd6\\xd8-\\xde]+(?=[A-Z\\xc0-\\xd6\\xd8-\\xde][a-z\\xdf-\\xf6\\xf8-\\xff]+)|[A-Z\\xc0-\\xd6\\xd8-\\xde]?[a-z\\xdf-\\xf6\\xf8-\\xff]+|[A-Z\\xc0-\\xd6\\xd8-\\xde]+|[0-9]+","g"),$n="Array ArrayBuffer Date Error Float32Array Float64Array Function Int8Array Int16Array Int32Array Math Number Object RegExp Set String _ clearTimeout isFinite parseFloat parseInt setTimeout TypeError Uint8Array Uint8ClampedArray Uint16Array Uint32Array WeakMap".split(" "),Sn={};
Sn[X]=Sn[H]=Sn[Q]=Sn[nn]=Sn[tn]=Sn[rn]=Sn[en]=Sn[un]=Sn[on]=true,Sn[B]=Sn[D]=Sn[J]=Sn[M]=Sn[q]=Sn[P]=Sn[K]=Sn["[object Map]"]=Sn[V]=Sn[Z]=Sn[Y]=Sn["[object Set]"]=Sn[G]=Sn["[object WeakMap]"]=false;var Fn={};Fn[B]=Fn[D]=Fn[J]=Fn[M]=Fn[q]=Fn[X]=Fn[H]=Fn[Q]=Fn[nn]=Fn[tn]=Fn[V]=Fn[Z]=Fn[Y]=Fn[G]=Fn[rn]=Fn[en]=Fn[un]=Fn[on]=true,Fn[P]=Fn[K]=Fn["[object Map]"]=Fn["[object Set]"]=Fn["[object WeakMap]"]=false;var Nn={"\xc0":"A","\xc1":"A","\xc2":"A","\xc3":"A","\xc4":"A","\xc5":"A","\xe0":"a","\xe1":"a","\xe2":"a",
"\xe3":"a","\xe4":"a","\xe5":"a","\xc7":"C","\xe7":"c","\xd0":"D","\xf0":"d","\xc8":"E","\xc9":"E","\xca":"E","\xcb":"E","\xe8":"e","\xe9":"e","\xea":"e","\xeb":"e","\xcc":"I","\xcd":"I","\xce":"I","\xcf":"I","\xec":"i","\xed":"i","\xee":"i","\xef":"i","\xd1":"N","\xf1":"n","\xd2":"O","\xd3":"O","\xd4":"O","\xd5":"O","\xd6":"O","\xd8":"O","\xf2":"o","\xf3":"o","\xf4":"o","\xf5":"o","\xf6":"o","\xf8":"o","\xd9":"U","\xda":"U","\xdb":"U","\xdc":"U","\xf9":"u","\xfa":"u","\xfb":"u","\xfc":"u","\xdd":"Y",
"\xfd":"y","\xff":"y","\xc6":"Ae","\xe6":"ae","\xde":"Th","\xfe":"th","\xdf":"ss"},Tn={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","`":"&#96;"},Ln={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'","&#96;":"`"},zn={"function":true,object:true},Bn={0:"x30",1:"x31",2:"x32",3:"x33",4:"x34",5:"x35",6:"x36",7:"x37",8:"x38",9:"x39",A:"x41",B:"x42",C:"x43",D:"x44",E:"x45",F:"x46",a:"x61",b:"x62",c:"x63",d:"x64",e:"x65",f:"x66",n:"x6e",r:"x72",t:"x74",u:"x75",v:"x76",x:"x78"},Dn={"\\":"\\",
"'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},Mn=zn[typeof exports]&&exports&&!exports.nodeType&&exports,qn=zn[typeof module]&&module&&!module.nodeType&&module,Pn=zn[typeof self]&&self&&self.Object&&self,Kn=zn[typeof window]&&window&&window.Object&&window,Vn=qn&&qn.exports===Mn&&Mn,Zn=Mn&&qn&&typeof global=="object"&&global&&global.Object&&global||Kn!==(this&&this.window)&&Kn||Pn||this,Yn=m();typeof define=="function"&&typeof define.amd=="object"&&define.amd?(Zn._=Yn, define(function(){
return Yn})):Mn&&qn?Vn?(qn.exports=Yn)._=Yn:Mn._=Yn:Zn._=Yn}).call(this);
(function(a,b){if(typeof define==="function"&&define.amd){define([],b);}else{if(typeof exports==="object"){module.exports=b();}else{a.X2JS=b();}}}(this,function(){return function(z){var t="1.2.0";z=z||{};i();u();function i(){if(z.escapeMode===undefined){z.escapeMode=true;}z.attributePrefix=z.attributePrefix||"_";z.arrayAccessForm=z.arrayAccessForm||"none";z.emptyNodeForm=z.emptyNodeForm||"text";if(z.enableToStringFunc===undefined){z.enableToStringFunc=true;}z.arrayAccessFormPaths=z.arrayAccessFormPaths||[];if(z.skipEmptyTextNodesForObj===undefined){z.skipEmptyTextNodesForObj=true;}if(z.stripWhitespaces===undefined){z.stripWhitespaces=true;}z.datetimeAccessFormPaths=z.datetimeAccessFormPaths||[];if(z.useDoubleQuotes===undefined){z.useDoubleQuotes=false;}z.xmlElementsFilter=z.xmlElementsFilter||[];z.jsonPropertiesFilter=z.jsonPropertiesFilter||[];if(z.keepCData===undefined){z.keepCData=false;}}var h={ELEMENT_NODE:1,TEXT_NODE:3,CDATA_SECTION_NODE:4,COMMENT_NODE:8,DOCUMENT_NODE:9};function u(){}function x(B){var C=B.localName;if(C==null){C=B.baseName;}if(C==null||C==""){C=B.nodeName;}return C;}function r(B){return B.prefix;}function s(B){if(typeof(B)=="string"){return B.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;");}else{return B;}}function k(B){return B.replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&quot;/g,'"').replace(/&apos;/g,"'").replace(/&amp;/g,"&");}function w(C,F,D,E){var B=0;for(;B<C.length;B++){var G=C[B];if(typeof G==="string"){if(G==E){break;}}else{if(G instanceof RegExp){if(G.test(E)){break;}}else{if(typeof G==="function"){if(G(F,D,E)){break;}}}}}return B!=C.length;}function n(D,B,C){switch(z.arrayAccessForm){case"property":if(!(D[B] instanceof Array)){D[B+"_asArray"]=[D[B]];}else{D[B+"_asArray"]=D[B];}break;}if(!(D[B] instanceof Array)&&z.arrayAccessFormPaths.length>0){if(w(z.arrayAccessFormPaths,D,B,C)){D[B]=[D[B]];}}}function a(G){var E=G.split(/[-T:+Z]/g);var F=new Date(E[0],E[1]-1,E[2]);var D=E[5].split(".");F.setHours(E[3],E[4],D[0]);if(D.length>1){F.setMilliseconds(D[1]);}if(E[6]&&E[7]){var C=E[6]*60+Number(E[7]);var B=/\d\d-\d\d:\d\d$/.test(G)?"-":"+";C=0+(B=="-"?-1*C:C);F.setMinutes(F.getMinutes()-C-F.getTimezoneOffset());}else{if(G.indexOf("Z",G.length-1)!==-1){F=new Date(Date.UTC(F.getFullYear(),F.getMonth(),F.getDate(),F.getHours(),F.getMinutes(),F.getSeconds(),F.getMilliseconds()));}}return F;}function q(D,B,C){if(z.datetimeAccessFormPaths.length>0){var E=C.split(".#")[0];if(w(z.datetimeAccessFormPaths,D,B,E)){return a(D);}else{return D;}}else{return D;}}function b(E,C,B,D){if(C==h.ELEMENT_NODE&&z.xmlElementsFilter.length>0){return w(z.xmlElementsFilter,E,B,D);}else{return true;}}function A(D,J){if(D.nodeType==h.DOCUMENT_NODE){var K=new Object;var B=D.childNodes;for(var L=0;L<B.length;L++){var C=B.item(L);if(C.nodeType==h.ELEMENT_NODE){var I=x(C);K[I]=A(C,I);}}return K;}else{if(D.nodeType==h.ELEMENT_NODE){var K=new Object;K.__cnt=0;var B=D.childNodes;for(var L=0;L<B.length;L++){var C=B.item(L);var I=x(C);if(C.nodeType!=h.COMMENT_NODE){var H=J+"."+I;if(b(K,C.nodeType,I,H)){K.__cnt++;if(K[I]==null){K[I]=A(C,H);n(K,I,H);}else{if(K[I]!=null){if(!(K[I] instanceof Array)){K[I]=[K[I]];n(K,I,H);}}(K[I])[K[I].length]=A(C,H);}}}}for(var E=0;E<D.attributes.length;E++){var F=D.attributes.item(E);K.__cnt++;K[z.attributePrefix+F.name]=F.value;}var G=r(D);if(G!=null&&G!=""){K.__cnt++;K.__prefix=G;}if(K["#text"]!=null){K.__text=K["#text"];if(K.__text instanceof Array){K.__text=K.__text.join("\n");}if(z.stripWhitespaces){K.__text=K.__text.trim();}delete K["#text"];if(z.arrayAccessForm=="property"){delete K["#text_asArray"];}K.__text=q(K.__text,I,J+"."+I);}if(K["#cdata-section"]!=null){K.__cdata=K["#cdata-section"];delete K["#cdata-section"];if(z.arrayAccessForm=="property"){delete K["#cdata-section_asArray"];}}if(K.__cnt==0&&z.emptyNodeForm=="text"){K="";}else{if(K.__cnt==1&&K.__text!=null){K=K.__text;}else{if(K.__cnt==1&&K.__cdata!=null&&!z.keepCData){K=K.__cdata;}else{if(K.__cnt>1&&K.__text!=null&&z.skipEmptyTextNodesForObj){if((z.stripWhitespaces&&K.__text=="")||(K.__text.trim()=="")){delete K.__text;}}}}}delete K.__cnt;if(z.enableToStringFunc&&(K.__text!=null||K.__cdata!=null)){K.toString=function(){return(this.__text!=null?this.__text:"")+(this.__cdata!=null?this.__cdata:"");};}return K;}else{if(D.nodeType==h.TEXT_NODE||D.nodeType==h.CDATA_SECTION_NODE){return D.nodeValue;}}}}function o(I,F,H,C){var E="<"+((I!=null&&I.__prefix!=null)?(I.__prefix+":"):"")+F;if(H!=null){for(var G=0;G<H.length;G++){var D=H[G];var B=I[D];if(z.escapeMode){B=s(B);}E+=" "+D.substr(z.attributePrefix.length)+"=";if(z.useDoubleQuotes){E+='"'+B+'"';}else{E+="'"+B+"'";}}}if(!C){E+=">";}else{E+="/>";}return E;}function j(C,B){return"</"+(C.__prefix!=null?(C.__prefix+":"):"")+B+">";}function v(C,B){return C.indexOf(B,C.length-B.length)!==-1;}function y(C,B){if((z.arrayAccessForm=="property"&&v(B.toString(),("_asArray")))||B.toString().indexOf(z.attributePrefix)==0||B.toString().indexOf("__")==0||(C[B] instanceof Function)){return true;}else{return false;}}function m(D){var C=0;if(D instanceof Object){for(var B in D){if(y(D,B)){continue;}C++;}}return C;}function l(D,B,C){return z.jsonPropertiesFilter.length==0||C==""||w(z.jsonPropertiesFilter,D,B,C);}function c(D){var C=[];if(D instanceof Object){for(var B in D){if(B.toString().indexOf("__")==-1&&B.toString().indexOf(z.attributePrefix)==0){C.push(B);}}}return C;}function g(C){var B="";if(C.__cdata!=null){B+="<![CDATA["+C.__cdata+"]]>";}if(C.__text!=null){if(z.escapeMode){B+=s(C.__text);}else{B+=C.__text;}}return B;}function d(C){var B="";if(C instanceof Object){B+=g(C);}else{if(C!=null){if(z.escapeMode){B+=s(C);}else{B+=C;}}}return B;}function p(C,B){if(C===""){return B;}else{return C+"."+B;}}function f(D,G,F,E){var B="";if(D.length==0){B+=o(D,G,F,true);}else{for(var C=0;C<D.length;C++){B+=o(D[C],G,c(D[C]),false);B+=e(D[C],p(E,G));B+=j(D[C],G);}}return B;}function e(I,H){var B="";var F=m(I);if(F>0){for(var E in I){if(y(I,E)||(H!=""&&!l(I,E,p(H,E)))){continue;}var D=I[E];var G=c(D);if(D==null||D==undefined){B+=o(D,E,G,true);}else{if(D instanceof Object){if(D instanceof Array){B+=f(D,E,G,H);}else{if(D instanceof Date){B+=o(D,E,G,false);B+=D.toISOString();B+=j(D,E);}else{var C=m(D);if(C>0||D.__text!=null||D.__cdata!=null){B+=o(D,E,G,false);B+=e(D,p(H,E));B+=j(D,E);}else{B+=o(D,E,G,true);}}}}else{B+=o(D,E,G,false);B+=d(D);B+=j(D,E);}}}}B+=d(I);return B;}this.parseXmlString=function(D){var F=window.ActiveXObject||"ActiveXObject" in window;if(D===undefined){return null;}var E;if(window.DOMParser){var G=new window.DOMParser();var B=null;if(!F){try{B=G.parseFromString("INVALID","text/xml").getElementsByTagName("parsererror")[0].namespaceURI;}catch(C){B=null;}}try{E=G.parseFromString(D,"text/xml");if(B!=null&&E.getElementsByTagNameNS(B,"parsererror").length>0){E=null;}}catch(C){E=null;}}else{if(D.indexOf("<?")==0){D=D.substr(D.indexOf("?>")+2);}E=new ActiveXObject("Microsoft.XMLDOM");E.async="false";E.loadXML(D);}return E;};this.asArray=function(B){if(B===undefined||B==null){return[];}else{if(B instanceof Array){return B;}else{return[B];}}};this.toXmlDateTime=function(B){if(B instanceof Date){return B.toISOString();}else{if(typeof(B)==="number"){return new Date(B).toISOString();}else{return null;}}};this.asDateTime=function(B){if(typeof(B)=="string"){return a(B);}else{return B;}};this.xml2json=function(B){return A(B);};this.xml_str2json=function(B){var C=this.parseXmlString(B);if(C!=null){return this.xml2json(C);}else{return null;}};this.json2xml_str=function(B){return e(B,"");};this.json2xml=function(C){var B=this.json2xml_str(C);return this.parseXmlString(B);};this.getVersion=function(){return t;};};}));
(function() {	
    angular.module('myApp', ['startform','ngAnimate','ngProgress','Data','logsWeb','logsKernel'])
	//add cookies back in ,'ngCookies'
	
	.run(["$http", "$rootScope", "$uibModal", "ngProgressFactory", "Data", function($http,$rootScope,$uibModal,ngProgressFactory,Data) {		
        $rootScope.authenticated = true;
        $rootScope.authToken = "test";
		$rootScope.startField = "test";		
        
		$rootScope.getLocation = function(){
			return 'MSTR Log Parser'
		}
		$rootScope.getErrorCSS = function(error){
			if(!error)
				return 'alert-danger';
			
			//{error.status == 'Warning' ? ''alert-warning' : 'alert-danger'}
			if(error.status == 'Warning')
				return 'alert-warning';
			else
				return 'alert-danger';
		}
		$rootScope.doReset = function(){
			$rootScope.totalData = 0;
			return Data.resetLogs();
		};
        $rootScope.viewHelp = function(){
             var modalInstance = $uibModal.open({
                animation: true,
                templateUrl: 'partials/sub/helpView.html',
                size: 'lg',
            });
        }

		$rootScope.totalData = 0;
		$rootScope.dataset = {
			//these will hold the data processed by the parser
	    	logs:{
	    		web: new Array(),
				kernel: new Array(),
				iserver: new Array(),
				skipped: new Array(),
	    	},
			indexes:{
				web: 0,
				kernel: 0,
				iserver: 0,
				skipped: 0,
			},
			//hold the state of the parser, whether it's still processing incoming data
			state:{
				isParsing: false,//processing uploaded file
				uploading: false,//uploading
				filesParsing: 0,
				filesParsed: 0,
			}
	    };
		$rootScope.isParsing = function(){
			return $rootScope.dataset.state.isParsing;
		};
		$rootScope.isUploading = function(){
			return $rootScope.dataset.state.isUploading;
		};
		
		// link any monitoring vars to rootScope, so they're accessible from the DOM scope
		
	}])
	
	.config(["$httpProvider", function ($httpProvider) {
		// passthru auth
	    $httpProvider.defaults.withCredentials = true;
	}])
	
	.directive('elastic', [
	    '$timeout',
	    function($timeout) {
	        return {
	            restrict: 'A',
	            link: function($scope, element) {
	                $scope.initialHeight = $scope.initialHeight || element[0].style.height;
	                var resize = function() {
	                    element[0].style.height = $scope.initialHeight;
	                    element[0].style.height = "" + element[0].scrollHeight + "px";
	                };
	                element.on("input change", resize);
	                $timeout(resize, 0);
	            }
	        };
	    }
	]);
})();
/*
ngprogress 1.1.2 - slim, site-wide progressbar for AngularJS 
(C) 2013 - Victor Bjelkholm 
License: MIT 
Source: https://github.com/VictorBjelkholm/ngProgress 
Date Compiled: 2015-07-27 
*/
angular.module('ngProgress.provider', ['ngProgress.directive'])
    .service('ngProgress', function () {
        'use strict';
				return ['$document', '$window', '$compile', '$rootScope', '$timeout', function($document, $window, $compile, $rootScope, $timeout) {
						this.autoStyle = true;
						this.count = 0;
            this.height = '2px';
						this.$scope = $rootScope.$new();
						this.color = '#0ED0FF';
						this.parent = $document.find('body')[0];
						this.count = 0;

            // Compile the directive
            this.progressbarEl = $compile('<ng-progress></ng-progress>')(this.$scope);
            // Add the element to body
            this.parent.appendChild(this.progressbarEl[0]);
            // Set the initial height
            this.$scope.count = this.count;
            // If height or color isn't undefined, set the height, background-color and color.
            if (this.height !== undefined) {
                this.progressbarEl.eq(0).children().css('height', this.height);
            }
            if (this.color !== undefined) {
                this.progressbarEl.eq(0).children().css('background-color', this.color);
                this.progressbarEl.eq(0).children().css('color', this.color);
            }
            // The ID for the interval controlling start()
            this.intervalCounterId = 0;

                // Starts the animation and adds between 0 - 5 percent to loading
                // each 400 milliseconds. Should always be finished with progressbar.complete()
                // to hide it
                this.start = function () {
                    // TODO Use requestAnimationFrame instead of setInterval
                    // https://developer.mozilla.org/en-US/docs/Web/API/window.requestAnimationFrame
                    this.show();
                    var self = this;
                    clearInterval(this.intervalCounterId);
                    this.intervalCounterId = setInterval(function () {
                        if (isNaN(self.count)) {
                            clearInterval(self.intervalCounterId);
                            self.count = 0;
                            self.hide();
                        } else {
                            self.remaining = 100 - self.count;
                            self.count = self.count + (0.15 * Math.pow(1 - Math.sqrt(self.remaining), 2));
                            self.updateCount(self.count);
                        }
                    }, 200);
                };
                this.updateCount = function (new_count) {
                    this.$scope.count = new_count;
                    if(!this.$scope.$$phase) {
                        this.$scope.$apply();
                    }
                };
                // Sets the height of the progressbar. Use any valid CSS value
                // Eg '10px', '1em' or '1%'
                this.setHeight = function (new_height) {
                    if (new_height !== undefined) {
                        this.height = new_height;
                        this.$scope.height = this.height;
                        if(!this.$scope.$$phase) {
                            this.$scope.$apply();
                        }
                    }
                    return this.height;
                };
                // Sets the color of the progressbar and it's shadow. Use any valid HTML
                // color
                this.setColor = function(new_color) {
                    if (new_color !== undefined) {
                        this.color = new_color;
                        this.$scope.color = this.color;
                        if(!this.$scope.$$phase) {
                            this.$scope.$apply();
                        }
                    }
                    return this.color;
                };
                this.hide = function() {
                    this.progressbarEl.children().css('opacity', '0');
                    var self = this;
                    self.animate(function () {
                        self.progressbarEl.children().css('width', '0%');
                        self.animate(function () {
                            self.show();
                        }, 500);
                    }, 500);
                };
                this.show = function () {
                    var self = this;
                    self.animate(function () {
                        self.progressbarEl.children().css('opacity', '1');
                    }, 100);
                };
                // Cancel any prior animations before running new ones.
                // Multiple simultaneous animations just look weird.
                this.animate = function(fn, time) {
                    if(this.animation !== undefined) { $timeout.cancel(this.animation); }
                    this.animation = $timeout(fn, time);
                };
                // Returns on how many percent the progressbar is at. Should'nt be needed
                this.status = function () {
                    return this.count;
                };
                // Stops the progressbar at it's current location
                this.stop = function () {
                    clearInterval(this.intervalCounterId);
                };
                // Set's the progressbar percentage. Use a number between 0 - 100.
                // If 100 is provided, complete will be called.
                this.set = function (new_count) {
                    this.show();
                    this.updateCount(new_count);
                    this.count = new_count;
                    clearInterval(this.intervalCounterId);
                    return this.count;
                };
                this.css = function (args) {
                    return this.progressbarEl.children().css(args);
                };
                // Resets the progressbar to percetage 0 and therefore will be hided after
                // it's rollbacked
                this.reset = function () {
                    clearInterval(this.intervalCounterId);
                    this.count = 0;
                    this.updateCount(this.count);
                    return 0;
                };
                // Jumps to 100% progress and fades away progressbar.
                this.complete = function () {
                    this.count = 100;
                    this.updateCount(this.count);
                    var self = this;
                    clearInterval(this.intervalCounterId);
                    $timeout(function () {
                        self.hide();
                        $timeout(function () {
                            self.count = 0;
                            self.updateCount(self.count);
                        }, 500);
                    }, 1000);
                    return this.count;
                };
                // Set the parent of the directive, sometimes body is not sufficient
                this.setParent = function(newParent) {
                    if(newParent === null || newParent === undefined) {
                        throw new Error('Provide a valid parent of type HTMLElement');
                    }

                    if(this.parent !== null && this.parent !== undefined) {
                        this.parent.removeChild(this.progressbarEl[0]);
                    }

                    this.parent = newParent;
                    this.parent.appendChild(this.progressbarEl[0]);
                };
                // Gets the current element the progressbar is attached to
                this.getDomElement = function () {
                    return this.progressbarEl;
                };
                this.setAbsolute = function() {
                    this.progressbarEl.css('position', 'absolute');
                };
            }];
    })
.factory('ngProgressFactory', ['$injector', 'ngProgress', function($injector, ngProgress) {
    var service = {
        createInstance: function () {
            return $injector.instantiate(ngProgress);
        }
    };
    return service;
}]);
angular.module('ngProgress.directive', [])
    .directive('ngProgress', ["$window", "$rootScope", function ($window, $rootScope) {
        var directiveObj = {
            // Replace the directive
            replace: true,
            // Only use as a element
            restrict: 'E',
            link: function ($scope, $element, $attrs, $controller) {
                // Watch the count on the $rootScope. As soon as count changes to something that
                // isn't undefined or null, change the counter on $scope and also the width of
                // the progressbar. The same goes for color and height on the $rootScope
                $scope.$watch('count', function (newVal) {
                    if (newVal !== undefined || newVal !== null) {
                        $scope.counter = newVal;
                        $element.eq(0).children().css('width', newVal + '%');
                    }
                });
                $scope.$watch('color', function (newVal) {
                    if (newVal !== undefined || newVal !== null) {
                        $scope.color = newVal;
                        $element.eq(0).children().css('background-color', newVal);
                        $element.eq(0).children().css('color', newVal);
                    }
                });
                $scope.$watch('height', function (newVal) {
                    if (newVal !== undefined || newVal !== null) {
                        $scope.height = newVal;
                        $element.eq(0).children().css('height', newVal);
                    }
                });
            },
            // The actual html that will be used
            template: '<div id="ngProgress-container"><div id="ngProgress"></div></div>'
        };
        return directiveObj;
    }]);

angular.module('ngProgress', ['ngProgress.directive', 'ngProgress.provider']);
'use strict';

/*
 * AngularJS Toaster
 * Version: 0.4.4
 *
 * Copyright 2013 Jiri Kavulak.  
 * All Rights Reserved.  
 * Use, reproduction, distribution, and modification of this code is subject to the terms and 
 * conditions of the MIT license, available at http://www.opensource.org/licenses/mit-license.php
 *
 * Author: Jiri Kavulak
 * Related to project of John Papa and Hans Fjällemark
 */

angular.module('toaster', ['ngAnimate'])
.service('toaster', ['$rootScope', function ($rootScope) {
    this.pop = function (type, title, body, timeout, bodyOutputType) {
        this.toast = {
            type: type,
            title: title,
            body: body,
            timeout: timeout,
            bodyOutputType: bodyOutputType
        };
        $rootScope.$broadcast('toaster-newToast');
    };
	this.popSimple = function(type, title, body, timeout){
        this.pop(type, title, body, timeout, 'trustedHtml');
	}

    this.clear = function () {
        $rootScope.$broadcast('toaster-clearToasts');
    };
}])
.constant('toasterConfig', {
    'limit': 0,                   // limits max number of toasts 
    'tap-to-dismiss': true,
    'newest-on-top': true,
    //'fade-in': 1000,            // done in css
    //'on-fade-in': undefined,    // not implemented
    //'fade-out': 1000,           // done in css
    // 'on-fade-out': undefined,  // not implemented
    //'extended-time-out': 1000,    // not implemented
    'time-out': 5000, // Set timeOut and extendedTimeout to 0 to make it sticky
    'icon-classes': {
        error: 'toast-error',
        info: 'toast-info',
        success: 'toast-success',
        warning: 'toast-warning'
    },
    'body-output-type': '', // Options: '', 'trustedHtml', 'template'
    'body-template': 'toasterBodyTmpl.html',
    'icon-class': 'toast-info',
    'position-class': 'toast-top-right',
    'title-class': 'toast-title',
    'message-class': 'toast-message'
})
.directive('toasterContainer', ['$compile', '$timeout', '$sce', 'toasterConfig', 'toaster',
function ($compile, $timeout, $sce, toasterConfig, toaster) {
    return {
        replace: true,
        restrict: 'EA',
        link: function (scope, elm, attrs) {

            var id = 0;

            var mergedConfig = toasterConfig;
            if (attrs.toasterOptions) {
                angular.extend(mergedConfig, scope.$eval(attrs.toasterOptions));
            }

            scope.config = {
                position: mergedConfig['position-class'],
                title: mergedConfig['title-class'],
                message: mergedConfig['message-class'],
                tap: mergedConfig['tap-to-dismiss']
            };

            scope.configureTimer = function configureTimer(toast) {
                var timeout = typeof (toast.timeout) == "number" ? toast.timeout : mergedConfig['time-out'];
                if (timeout > 0)
                    setTimeout(toast, timeout);
            };

            function addToast(toast) {
                toast.type = mergedConfig['icon-classes'][toast.type];
                if (!toast.type)
                    toast.type = mergedConfig['icon-class'];

                id++;
                angular.extend(toast, { id: id });

                // Set the toast.bodyOutputType to the default if it isn't set
                toast.bodyOutputType = toast.bodyOutputType || mergedConfig['body-output-type']
                switch (toast.bodyOutputType) {
                    case 'trustedHtml':
                        toast.html = $sce.trustAsHtml(toast.body);
                        break;
                    case 'template':
                        toast.bodyTemplate = toast.body || mergedConfig['body-template'];
                        break;
                }

                scope.configureTimer(toast);

                if (mergedConfig['newest-on-top'] === true) {
                    scope.toasters.unshift(toast);
                    if (mergedConfig['limit'] > 0 && scope.toasters.length > mergedConfig['limit']) {
                        scope.toasters.pop();
                    }
                } else {
                    scope.toasters.push(toast);
                    if (mergedConfig['limit'] > 0 && scope.toasters.length > mergedConfig['limit']) {
                        scope.toasters.shift();
                    }
                }
            }

            function setTimeout(toast, time) {
                toast.timeout = $timeout(function () {
                    scope.removeToast(toast.id);
                }, time);
            }

            scope.toasters = [];
            scope.$on('toaster-newToast', function () {
                addToast(toaster.toast);
            });

            scope.$on('toaster-clearToasts', function () {
                scope.toasters.splice(0, scope.toasters.length);
            });
        },
        controller: ['$scope', '$element', '$attrs', function ($scope, $element, $attrs) {

            $scope.stopTimer = function (toast) {
                if (toast.timeout) {
                    $timeout.cancel(toast.timeout);
                    toast.timeout = null;
                }
            };

            $scope.restartTimer = function (toast) {
                if (!toast.timeout)
                    $scope.configureTimer(toast);
            };

            $scope.removeToast = function (id) {
                var i = 0;
                for (i; i < $scope.toasters.length; i++) {
                    if ($scope.toasters[i].id === id)
                        break;
                }
                $scope.toasters.splice(i, 1);
            };

            $scope.remove = function (id) {
                if ($scope.config.tap === true) {
                    $scope.removeToast(id);
                }
            };
        }],
        template:
        '<div  id="toast-container" ng-class="config.position">' +
            '<div ng-repeat="toaster in toasters" class="toast" ng-class="toaster.type" ng-click="remove(toaster.id)" ng-mouseover="stopTimer(toaster)"  ng-mouseout="restartTimer(toaster)">' +
              '<div ng-class="config.title">{{toaster.title}}</div>' +
              '<div ng-class="config.message" ng-switch on="toaster.bodyOutputType">' +
                '<div ng-switch-when="trustedHtml" ng-bind-html="toaster.html"></div>' +
                '<div ng-switch-when="template"><div ng-include="toaster.bodyTemplate"></div></div>' +
                '<div ng-switch-default >{{toaster.body}}</div>' +
              '</div>' +
            '</div>' +
        '</div>'
    };
}]);

angular.module('inspectLogKernelCtrl', [])//'confirm'
	.controller('inspectLogKernelCtrl', ['$scope', '$uibModalInstance', 'log', '$timeout', '$document', 'Data', '$rootScope', function ($scope, $uibModalInstance, log, $timeout, $document, Data, $rootScope) {
	    var self = $scope;				
        
		self.log = log;//direct reference instead of clone
		
		self.saveLabel = "Save Application"
		self.saveAction = "next";
	    self.save = function () {
			var result = {
				action: self.saveAction,
				data: self.app
			};
			$uibModalInstance.close(result);
	    };
		

	    self.cancel = function () {
			$uibModalInstance.dismiss('cancel');
	    };
		
        self.navigateTo = function($direction){
            var result = {
                action: $direction,
                data: self.log.id
            };
            $uibModalInstance.close(result);
        }
        
        var EnumKeys = {
            left : 37,
            right : 39,
        }
        function eventHandler(event) {
           // console.log("event pressed: ",event.keyCode);
            //37 = left key
            //39 = right key
            if (event.keyCode === EnumKeys.left) {
                if(self.log.id != ($rootScope.dataset.logs.kernel.length - 1)){//last element is actually 1 before total element count due to array notation
                   // debugger;
                    console.log("moved left: ",self.log);
                    self.navigateTo("previous");
                }else{
                    console.log("refusing left action, this is the most recent log file");
                }
            }
            if (event.keyCode === EnumKeys.right) {
                //delete(self.log);
                if(self.log.id != 0){
                    console.log("moved right: ",self.log);
                    self.navigateTo("next");
                }else{
                    console.log("refusing right action, this is the last log file");
                }
            }
        }
        
        var EVENT_TYPES = "keydown keypress"
        $document.bind(EVENT_TYPES, eventHandler);
        	  
		self.autoExpand = function(e) {
			var element = typeof e === 'object' ? e.target : document.getElementById(e);
	        //element.style.height = 'auto';
	        element.style.height = element.scrollHeight + 2 +'px';
	    };
		// init stuff here
		self.onShow = function(){
		    $timeout(function(){
                self.autoExpand('email_body');
            }, 0);
			
		}
	}
]);
angular.module('inspectLogWebCtrl', [])//'confirm'
	.controller('inspectLogWebCtrl', ['$scope', '$uibModalInstance', 'log', '$timeout', '$document', 'Data', '$rootScope', function ($scope, $uibModalInstance, log, $timeout, $document, Data, $rootScope) {
	    var self = $scope;				
        
		self.log = log;//direct reference instead of clone
		
		self.saveLabel = "Save Application"
		self.saveAction = "next";
	    self.save = function () {
			var result = {
				action: self.saveAction,
				data: self.app
			};
			$uibModalInstance.close(result);
	    };
		

	    self.cancel = function () {
			$uibModalInstance.dismiss('cancel');
	    };
		
        self.navigateTo = function($direction){
            var result = {
                action: $direction,
                data: self.log.id
            };
            $uibModalInstance.close(result);
        }
        
        var EnumKeys = {
            left : 37,
            right : 39,
        }
        function eventHandler(event) {
           // console.log("event pressed: ",event.keyCode);
            //37 = left key
            //39 = right key
            if (event.keyCode === EnumKeys.left) {
                if(self.log.id != ($rootScope.dataset.logs.web.length - 1)){//last element is actually 1 before total element count due to array notation
                   // debugger;
                    console.log("moved left: ",self.log);
                    self.navigateTo("previous");
                }else{
                    console.log("refusing left action, this is the most recent log file");
                }
            }
            if (event.keyCode === EnumKeys.right) {
                //delete(self.log);
                if(self.log.id != 0){
                    console.log("moved right: ",self.log);
                    self.navigateTo("next");
                }else{
                    console.log("refusing right action, this is the last log file");
                }
            }
        }
        
        var EVENT_TYPES = "keydown keypress"
        $document.bind(EVENT_TYPES, eventHandler);
        
		// catch modal close actions and add warning with possibility to cancel
		self.$on('modal.closing', function(event, reason, closed) {
			var message = "You are about to leave the edit view. Uncaught reason. Are you sure?";

			if(typeof reason === 'object' && reason.action === 'save'){
				message = "Save changes?";
			}
			else switch (reason){
				// clicked outside
				case "backdrop click":
					message = "Any changes will be lost, are you sure?";
					break;
				
				// cancel button
				case "cancel":
					message = "Any changes will be lost, are you sure?";
					break;
				
				// escape key
				case "escape key press":
					message = "Any changes will be lost, are you sure?";
					break;
					
				default:
					console.log('modal.closing: ' + (closed ? 'close' : 'dismiss') + '(' + reason + ')');
					break;
			}
            /*
			if (!confirm(message)) {
				event.preventDefault();
			}//*/
		});
			  
		self.autoExpand = function(e) {
			var element = typeof e === 'object' ? e.target : document.getElementById(e);
	        //element.style.height = 'auto';
	        element.style.height = element.scrollHeight + 2 +'px';
	    };
		// init stuff here
		self.onShow = function(){
		    $timeout(function(){
                self.autoExpand('email_body');
            }, 0);
			
		}
		
		function resize(){
		    //self.autoExpand('email_body');
		}
	}
]);
(function () {
    angular.module('logsKernel', ['ngTable','ui.bootstrap','JSONfilter','inspectLogKernelCtrl'])

    .directive('logskernel', function() {
        return {
            restrict: 'E',
            templateUrl: 'partials/logsKernel.html',
			link: function (scope, element, attrs) {
				
			},
			controller: ['$scope','$rootScope','NgTableParams', '$filter', '$timeout','$uibModal', function($scope, $rootScope, NgTableParams, $filter, $timeout, $uibModal) {	
			    var self = $scope;				

				self.total = {};
				self.pagination = {};
				self.pagination.currentPage = 1;
				self.pagination.perPage = 50;

				self.debug = function(param){
					debugger;
				}
				
				// all tracking vars for drag n drop action
                self.dragging = false;
				self.mouseIsDown = false;
                self.mouseDown = function(event){
                    //console.log("mouse down");
                    self.mouseIsDown = true;
                    self.dragging = false;
                };
                self.mouseUp = function(log){
                    //console.log("mouse up");
                    self.mouseIsDown = false;
                    
                    if(self.dragging){
                        //console.log("Must have dragged");
                        return false;
                    }else{
                        self.viewKernelMessage(log);
                    }
                };
                self.mouseMove = function(event){
                    //console.log("mouse moved");
                    self.dragging = true;
                };
                self.dblClick = function($event){
                    console.log("double click");
                    //$event.preventDefault();
                    //$event.stopPropagation();
					
                };
				self.preventAction = function($event){
					$event.preventDefault();
					$event.stopPropagation();
				}
				
				self.containsError = function(param){
					if(typeof param.XMLActionName == 'undefined') return false;
					
					if(param.XMLActionName.indexOf("failed") !== -1)
						return true;
					
					return false;
				}
				self.getRowClass = function(row){
					// mark rows differently if they have an error.
					if(this.containsError(row)){	
						if(row.isSelected)
							return "bg-danger";
						else
							return "bg-warning";
						
					}else if(row.isSelected)
						return "bg-primary";
				}

				// Enable resize
				self.resizeKernel = false;
				self.toggleResizeKernel = function () {
					if (self.resizeKernel) {
						console.log("disabling resize");
						$("#ngTableKernelLogs").colResizable({
							disable: true
						});
						self.resizeKernel = false;
					} else {
						console.log("enabling resize");
						$("#ngTableKernelLogs").colResizable({
							fixed: false,
							liveDrag: true,
							resizeMode: 'overflow',
							gripInnerHtml:"<div class='grip'></div>", 
   							draggingClass:"dragging"
						});
						self.resizeKernel = true;
					}
				};
                
				self.columns = {
					"LID": {"title": "Reference ID of log message within log file. Higher numbers are more recent messages."},
					"Package": {"title": "Package Name"},
					"XMLCommand": {"title": "Contents of <st><sst><st><cmd> within the raw XML"}
				};

				// delete a row from the dataset
			    self.delKernel = function(row) {
					_.remove(self.kernelLogTableParams.settings().dataset, function(item) {
						return row === item;
					});

					self.kernelLogTableParams.reload().then(function(data) {
						if ($rootScope.dataset.logs.kernel.length === 0 && self.kernelLogTableParams.total() > 0) {
							self.kernelLogTableParams.page(self.kernelLogTableParams.page() - 1);
							self.kernelLogTableParams.reload();
						}
					});
				}
				
				//Highlight row on click
				self.isSelected = [];
				self.toggleSelection = function (log) {
					log.isSelected =! log.isSelected;
					console.log("row selection toggled: ", log.isSelected);
				}

                // open modal to display full log in scrollable subview
                self.viewKernelMessage = function(log){
                    // open a modal view of that log message
                    var modalInstance = $uibModal.open({
						animation: true,
						templateUrl: 'partials/sub/inspectLogKernel.html',
						controller: 'inspectLogKernelCtrl',
						size: 'lg',
            			windowClass: 'app-modal-window',
						resolve: {
							log: function () {
								return log;
							}
						}
					});
                    
                    modalInstance.result.then(function (result) {
                        var nextID;
                        if(result.action == "next"){
                           // debugger;
                            nextID = result.data - 1;//since rows are in reverse order, top row is first row
                            
                        }else if(result.action == "previous"){
                            nextID = result.data + 1;
                        }
                        //todo this doesn't work when sort order is changed
                        self.viewKernelMessage($rootScope.dataset.logs.kernel[nextID]);
                    }, function () {
						//console.log('Modal dismissed at: ' + new Date());
						}
					);
                }
                
                // open small modal with quick view of passed parameter
                self.quickView = function(param){
                    debugger;
                }

				self.filters = {
					date: 			'',
					time: 			'',
					
					host:  			'',
					pid: 			'',
					thread: 		'',
					
					XMLActionName: 	'',//XML Command, XML GetFolderID, etc
					XMLDetails: 	'',//other details, if not xml string
					XMLRaw: 		'',//xml
					XMLCommand: 	'',//xml.st.sst.st.cmd
	        	};

			    self.kernelLogTableParams = new NgTableParams({
				        page: self.pagination.currentPage,            // show first page
				        count: self.pagination.perPage,           // count per page
				        sorting: { 
							id: 			'desc',
							date: 			'',
							time: 			'',
					
							host:  			'',
							pid: 			'',
							thread: 		'',
					
							XMLActionName: 	'',//XML Command, XML GetFolderID, etc
							XMLDetails: 	'',//other details, if not xml string
							XMLRaw: 		'',//xml
							XMLCommand: 	'',//xml.st.sst.st.cmd
						},
				        filter: self.filters,
				    }, 
					{
				        //filterSwitch: true,
				        //total: 0, // length of data
						filterOptions: {
							filterDelay: 200
						},
						dataset: $rootScope.dataset.logs.kernel,
						/*
						getData: function(params) {
				            var orderedData = params.sorting() ? $filter('orderBy')($scope.completedQueries, params.orderBy()) : data;
				            orderedData	= $filter('filter')(orderedData, params.filter());
				            params.total(orderedData.length);
				            return orderedData.slice((params.page() - 1) * params.count(), params.page() * params.count()));
				        }
						getData: function(params){
						    // method to do custom filtering etc of data
						    return $rootScope.dataset.logs.kernel;
					
					
						},//*/
						counts: [10, 25, 50, 100, 500],//1000 is SLOW
					}
				);

				// watch data source for any changes
				$rootScope.$watch('dataset.logs.kernel', function () {
					// update dataset view on delay
					$timeout(function(){
						//debugger;
						//console.log("reloading table data")
						self.kernelLogTableParams.settings({
							dataset: $rootScope.dataset.logs.kernel
						});
						self.kernelLogTableParams.reload();
						
					}, 300)
				});

				$scope.$on('dataset.kernel.added', function(){
					//console.log("handle added dataset");
					$timeout(function(){
						self.kernelLogTableParams.settings({
							dataset: $rootScope.dataset.logs.kernel
						});
						self.kernelLogTableParams.reload();
					}, 100);
				});
			}],
			controllerAs: 'logsKernelCtrl'
        };
    });
})();
(function () {
    angular.module('logsWeb', ['ngTable','ui.bootstrap','inspectLogWebCtrl'])

    .directive('logsweb', function() {
        return {
            restrict: 'E',
            templateUrl: 'partials/logsWeb.html',
			link: function (scope, element, attrs) {
				
			},
			controller: ['$scope','$rootScope','NgTableParams', '$filter', '$timeout','$uibModal', function($scope, $rootScope, NgTableParams, $filter, $timeout, $uibModal) {	
			    var self = $scope;				

				self.total = {};
				self.paginationWeb = {};
				self.paginationWeb.currentPage = 1;
				self.paginationWeb.perPage = 50;

				self.debug = function(param){
					debugger;
				}
				
				// all tracking vars for drag n drop action
                self.dragging = false;
				self.mouseIsDown = false;
                self.mouseDown = function(event){
                    //console.log("mouse down");
                    self.mouseIsDown = true;
                    self.dragging = false;
                };
                self.mouseUp = function(log){
                    //console.log("mouse up");
                    self.mouseIsDown = false;
                    
                    if(self.dragging){
                        //console.log("Must have dragged");
                        return false;
                    }else{
                        self.viewWebMessage(log);
                    }
                };
                self.mouseMove = function(event){
                    //console.log("mouse moved");
                    self.dragging = true;
                };
                self.dblClick = function($event){
                    //console.log("double click");
                    //$event.preventDefault();
                    //$event.stopPropagation();
					
                };
				self.preventAction = function($event){
					$event.preventDefault();
					$event.stopPropagation();
				}

				// Enable resize
				self.resizeWeb = false;
				self.toggleResizeWeb = function () {
					if (self.resizeWeb) {
						console.log("disabling resize");
						$("#ngTableWebLogs").colResizable({
							disable: true
						});
						self.resizeWeb = false;
					} else {
						console.log("enabling resize");
						$("#ngTableWebLogs").colResizable({
							fixed: false,
							liveDrag: true,
							resizeMode: 'overflow',
							gripInnerHtml:"<div class='grip'></div>", 
   							draggingClass:"dragging"
						});
						self.resizeWeb = true;
					}
				};
                
				//esvit/ng-table/issues/189
				/*
			    self.columns = [
					{ field: "LID", 		title: "LID", 			show: true },
					{ field: "Package", 	title: "Package", 		show: true },
					{ field: "Level", 		title: "Level", 		show: true },
					{ field: "Milliseconds", title: "Milliseconds",	show: true },
					{ field: "TimeStamp", 	title: "TimeStamp", 	show: true },
					{ field: "Thread", 		title: "Thread", 		show: true },
					{ field: "Class", 		title: "Class", 		show: true },
					{ field: "Method", 		title: "Method", 		show: true },
					{ field: "Exception", 	title: "Exception", 	show: true },
					{ field: "Others", 		title: "Others", 		show: true },
			    ];//*/
				
				self.columns = {
					"LID": {"title": "Reference ID of log message within log file. Higher numbers are more recent messages."},
					"Package": {"title": "Package Name"},
				};

				// delete a row from the dataset
			    self.delWeb = function(row) {
					_.remove(self.webLogTableParams.settings().dataset, function(item) {
						return row === item;
					});

					self.webLogTableParams.reload().then(function(data) {
						if ($rootScope.dataset.logs.web.length === 0 && self.webLogTableParams.total() > 0) {
							self.webLogTableParams.page(self.webLogTableParams.page() - 1);
							self.webLogTableParams.reload();
						}
					});
				}
				
				// create a popup with contents of param, deprecated in favour of bootstrap modals
				self.alert = function(param){
					//alert(param);
					var html = document.createElement('html');
					var body = document.createElement('body');
					var pre = document.createElement('pre');
					
					html.appendChild(body);
					body.appendChild(pre);
					pre.appendChild(document.createTextNode(param));
					
					var x=window.open('','_blank', 'toolbar=0,location=0,menubar=0,height=500,width=1400');
						x.document.open();
						x.document.write(html.innerHTML);
						x.document.close();
				}
                
				//Highlight row on click
				self.isSelected = [];
				self.toggleSelection = function (log) {
					log.isSelected =! log.isSelected;
					console.log("row selection toggled: ", log.isSelected);
				}

                // open modal to display full log in scrollable subview
                self.viewWebMessage = function(log){
                    // open a modal view of that log message
                    var modalInstance = $uibModal.open({
						animation: true,
						templateUrl: 'partials/sub/inspectLogWeb.html',
						controller: 'inspectLogWebCtrl',
						size: 'lg',
            			windowClass: 'app-modal-window',
						resolve: {
							log: function () {
								return log;
							}
						}
					});
                    
                    modalInstance.result.then(function (result) {
                        var nextID;
                        if(result.action == "next"){
                           // debugger;
                            nextID = result.data - 1;//since rows are in reverse order, top row is first row
                            
                        }else if(result.action == "previous"){
                            nextID = result.data + 1;
                        }
                        //todo this doesn't work when sort order is changed
                        self.viewWebMessage($rootScope.dataset.logs.web[nextID]);
                    }, function () {
						//console.log('Modal dismissed at: ' + new Date());
						}
					);
                }
                
                // open small modal with quick view of passed parameter
                self.quickView = function(param){
                    debugger;
                }

				self.filters = {
		            package: '',
					level: '',
					miliseconds: '',
					timestamp: '',
					thread: '',
					class: '',
					method: '',
					message: '',
					exception: '',
					others: ''
	        	};
				
				//>>>>>>> web log is empty for some reason, when uploading more than one file? ng-repeat brings no results
			    self.webLogTableParams = new NgTableParams({
				        page: self.paginationWeb.currentPage,            // show first page
				        count: self.paginationWeb.perPage,           // count per page
				        sorting: { 
	                        id: 'desc',
				            package: '',
							level: '',
							miliseconds: '',
							timestamp: '',
							thread: '',
							class: '',
							method: '',
							message: '',
							exception: ''
						},
				        filter: self.filters,
				    }, 
					{
				        //filterSwitch: true,
				        //total: 0, // length of data
						filterOptions: {
							filterDelay: 200
						},
						dataset: $rootScope.dataset.logs.web,
						/*
						getData: function(params) {
				            var orderedData = params.sorting() ? $filter('orderBy')($scope.completedQueries, params.orderBy()) : data;
				            orderedData	= $filter('filter')(orderedData, params.filter());
				            params.total(orderedData.length);
				            return orderedData.slice((params.page() - 1) * params.count(), params.page() * params.count()));
				        }
						getData: function(params){
						    // method to do custom filtering etc of data
						    return $rootScope.dataset.logs.web;
					
					
						},//*/
						counts: [10, 25, 50, 100, 500],//1000 is SLOW
					}
				);

				// watch data source for any changes
				/*
				$rootScope.$watch('dataset.logs.web', function () {
					// update dataset view on delay
					$timeout(function(){
						//debugger;
						//console.log("reloading table data")
						self.webLogTableParams.settings({
							dataset: $rootScope.dataset.logs.web
						});
						self.webLogTableParams.reload();
						//debugger;
					}, 300)
				});//*/
				
				$scope.$on('dataset.web.added', function(){
					//console.log("handle added dataset");
					$timeout(function(){
						//debugger;
						//console.log("reloading table data")
						self.webLogTableParams.settings({
							dataset: $rootScope.dataset.logs.web
						});
						self.webLogTableParams.reload();
						//debugger;
					}, 100);
				});

			}],
			controllerAs: 'logsWebCtrl'
        };
    });
})();
(function() {
    angular.module('startform', ['ngFileUpload','Data'])
    .directive('startform', function() {
        return {
            restrict: 'E',
            templateUrl: 'partials/startform.html',
            link: function (scope, element, attrs) {

			},
			controller: ['$scope','$rootScope','Data', function($scope, $rootScope, Data) {
			    var self = $scope;				
				
				var inputPasteHandler = function(e) {
					Data.progressBar.start();
					
                    var clipboardData, pastedData;

                    // Stop data actually being pasted into div
                    e.stopPropagation();
                    e.preventDefault();

                    // Get pasted data via clipboard API
                    clipboardData = e.clipboardData || window.clipboardData;
                    pastedData = clipboardData.getData('Text');

                    // Do whatever with pasteddata
                    Data.resetLogs();
					
                    Data.processNewLog(pastedData);
                    self.$apply();
					
					Data.progressBar.complete();
                }
                //$document.
                var EVENT_TYPES = "paste";
                document.getElementById('editableDiv').addEventListener(EVENT_TYPES, inputPasteHandler);    
				
				self.uploadFile = function(files){					
					if(!files) return;

					Data.resetLogs();
					console.clear();
					
					$rootScope.dataset.state.filesParsing = files.length;
					console.log("Upload XML file");
					
			        if (files && files.length) {
						Data.progressBar.start();
                        $rootScope.dataset.state.isParsing = true;

						self.log = "Processing " + files.length + " files.";
						
			            for (var i = 0; i < files.length; i++) {
			                var file = files[i];
							
							reader = new FileReader();
							reader.onloadend = function(e){
								self.log = "Loaded " + i + "/" + files.length + " files.";
                                Data.processNewLog(e.target.result);
							};
							reader.readAsText(file, 'UTF-8');
						}
					}else{
						console.log("no files registered: ",files);
					}
				};
				
				self.$watch('files', function () {
					self.uploadFile(self.files);
			    });
				
				self.$watch('file', function () {
					if (self.file != null) {
					    self.files = [self.file]; 
					}
				});
				self.log = '';
				
			    
			}],
			controllerAs: 'startformCtrl'
        };
    })
    .directive('sglclick', ['$parse', function($parse) {
        return {
            restrict: 'A',
            link: function(scope, element, attr) {
              var fn = $parse(attr['sglclick']);
              var delay = 300, clicks = 0, timer = null;
              element.on('click', function (event) {
                clicks++;  //count clicks
                if(clicks === 1) {
                  timer = setTimeout(function() {
                    scope.$apply(function () {
                        fn(scope, { $event: event });
                    }); 
                    clicks = 0;             //after action performed, reset counter
                  }, delay);
                  } else {
                    clearTimeout(timer);    //prevent single-click action
                    clicks = 0;             //after action performed, reset counter
                  }
              });
            }
        };
    }])
})();
angular.module('JSONfilter', [])
	.filter('plainJSON', function() {
		return function(input, uppercase) {
			input = input || '';
			var out = '';
			
			if(typeof input == 'object'){
				out = JSON.stringify(input);
			}
			return out;
		};
	});

(function() {
    angular.module('Data', [])
	.factory("Data", ['ngProgressFactory', '$rootScope', '$q', function (ngProgressFactory, $rootScope, $q) {
		
			/*
			var progressBar = ngProgressFactory.createInstance();
			//progressBar.setParent(document.getElementById('main-container'));
			progressBar.queue = 0;
			progressBar.updateQueue = function(value){
				var startedNow = true;
				if(progressBar.queue == 0) startedNow = false;
				progressBar.queue = progressBar.queue + value;
				
				if(progressBar.queue > 0) {
					if(!startedNow) {
						progressBar.start();
					}
					else{
						if(progressBar.queue != 1){
							var newVal = (100 / progressBar.queue);
							progressBar.set(newVal);
							progressBar.start();
						}
					}
				}
				else{
					progressBar.complete();
				}
			}*/			
		    var Data = {};
			
			// maintain progress bar when any parsing is in progress
			Data.progressBar = ngProgressFactory.createInstance();
			
			Data.resetLogs = function(){
				$rootScope.dataset.logs.web 		= new Array();
				$rootScope.dataset.logs.kernel 		= new Array();
				$rootScope.dataset.logs.iserver 	= new Array();
				$rootScope.dataset.logs.skipped 	= new Array(),
				
				$rootScope.dataset.indexes.web 		= 0;
				$rootScope.dataset.indexes.kernel	= 0;
				$rootScope.dataset.indexes.iserver	= 0;
				$rootScope.dataset.indexes.skipped	= 0;
				
				$rootScope.dataset.state.filesParsed  = 0;
				$rootScope.dataset.state.filesParsing = 0;
				$rootScope.totalData = 0;
			}
			// maybe move this into a helper class?
			// We have a predefined template of columns. Any extra column found in row that isn't in this list is added into the 'others' column
            Data.concatExtraColsWeb = function(row){					
				var template = { 
				    'package' : 'Java package within which message was triggered', 
				    'level' : 'Logging level',
				    'miliseconds' : 'Message milliseconds',
				    'timestamp' : 'Message timestamp',
				    'thread' : 'Thread ID',
				    'class' : 'Java class that triggered this message',
				    'method' : 'Method in java class that triggered this message',
				    'message' : 'Message',
				    'exception' : 'Full exception, if available',
					'others' : 'Used as a placeholder for abnormal extra xml tags and values'
				};
				
				if(!row.hasOwnProperty('others')) row.others = "";											
				for (var key in row) {
					// check against list for known keys
					if(key == 'trace')
						row.exception = row[key];
				    else if (!template.hasOwnProperty(key) && row.hasOwnProperty(key) && typeof(row[key]) == 'string') {
					    //console.log($rootScope.dataset.indexes.web + ": "+ key + " ( "+  typeof(row[key]) + ") -> " + row[key]);
						row.others += "(" + key + ")->" + row[key] + "; \n";
					}
				}
			};
			
			Data.isDate = function(date) {
			    return (new Date(date) !== "Invalid Date" && !isNaN(new Date(date)) ) ? true : false;
			}
			Data.splitDt = function(str){
				var arr = str.split(' '),
				    result = arr.splice(0,2);

				result.push(arr.join(' '));
				return result;
			}
			// WARNING: too painful to include supplementary planes, these characters (0x10000 and higher) 
			// will be stripped by this function. See what you are missing (heiroglyphics, emoji, etc) at:
			// http://en.wikipedia.org/wiki/Plane_(Unicode)#Supplementary_Multilingual_Plane
			Data.sanitizeStringForXML = function(theString) {
			    "use strict";
				var NOT_SAFE_IN_XML_1_0 = /[^\x09\x0A\x0D\x20-\xFF\x85\xA0-\uD7FF\uE000-\uFDCF\uFDE0-\uFFFD]/gm;
			    return theString.replace(NOT_SAFE_IN_XML_1_0, '');
			}

			Data.removeInvalidCharacters = function(node) {
			    "use strict";

			    if (node.attributes) {
			        for (var i = 0; i < node.attributes.length; i++) {
			            var attribute = node.attributes[i];
			            if (attribute.nodeValue) {
			                attribute.nodeValue = sanitizeStringForXML(attribute.nodeValue);
			            }
			        }
			    }
			    if (node.childNodes) {
			        for (var i = 0; i < node.childNodes.length; i++) {
			            var childNode = node.childNodes[i];
			            if (childNode.nodeType == 1 /* ELEMENT_NODE */) {
			                removeInvalidCharacters(childNode);
			            } else if (childNode.nodeType == 3 /* TEXT_NODE */) {
			                if (childNode.nodeValue) {
			                    childNode.nodeValue = sanitizeStringForXML(childNode.nodeValue);
			                }
			            }
			        }
			    }
			}
            Data.parseWebXMLLog = function(logContents){
                // web log files are xml but aren't wrapped in an XML tab.
                var xml = "<xml>" + logContents +"</xml>";
				
                var x2js = new X2JS();
                var json = x2js.xml_str2json(xml);
				if(!json){
					xml = this.sanitizeStringForXML(xml);
					json = x2js.xml_str2json(xml);
					if(!json){
						console.error("Unhandled & unparsable web log found ",logContents);
						Data.logParserError("Unhandled & unparsable web log found, check the javascript console for details.",'Warning',"");
						
						$rootScope.dataset.state.filesParsed++;
						if($rootScope.dataset.state.filesParsed == $rootScope.dataset.state.filesParsing){
							Data.progressBar.complete();
							$rootScope.dataset.state.isParsing = false;
						}
						return;
					}
				}
                if(json.xml.record.length){
                    //console.log("Processing " + json.xml.record.length + " rows");

                    for(var ii = 0;ii< json.xml.record.length;ii++){
                        Data.concatExtraColsWeb(json.xml.record[ii]);

                        json.xml.record[ii].id = $rootScope.dataset.indexes.web;
                        $rootScope.dataset.logs.web.push(json.xml.record[ii]);
                        $rootScope.dataset.indexes.web++;
						$rootScope.totalData++;
                    }
                }else{
                    //console.log("Processing 1 row");
                    Data.concatExtraColsWeb(json.xml.record);

                    json.xml.record.id = $rootScope.dataset.indexes.web;
                    $rootScope.dataset.logs.web.push(json.xml.record)
                    $rootScope.dataset.indexes.web++;
					$rootScope.totalData++;
                }

				$rootScope.dataset.state.filesParsed++;
				if($rootScope.dataset.state.filesParsed == $rootScope.dataset.state.filesParsing){
					Data.progressBar.complete();
					$rootScope.dataset.state.isParsing = false;
				}
                //console.log("Current dataset: ", $rootScope.dataset);
				$rootScope.$broadcast("dataset.web.added");
                console.log("current weblog dataset contains this many log rows: ", $rootScope.dataset.logs.web.length)
            }
			Data.processKernelMessage = function(message, dataset, index){
				//console.log("message length: ",message.length);
				var command = message[1];
				
				// if message was accidently broken into extra pieces, by the ":" split in previous method, add them to restore the full XML structure
				if(message.length > 2){
					for(var i = 2;i < message.length;i++)
						command += message[i];
				}
				
				var XMLCommand = "",
					XMLRaw = "",
					XMLDetails = "";
				
				// check if message[1] starts with <st or <mi, else it has other valuable information we shouldn't ignore
				if(command.startsWith("<st")){
					// xml command
					var xml 	= "<xml>" + command +"</xml>";
	                var x2js = new X2JS();
	                var json = x2js.xml_str2json(xml);
					
					if(!json){
						debugger;
					}
					XMLRaw = json.xml;
					XMLCommand = json.xml.st.sst.st.cmd;
					
				}else if(command.startsWith("<") /*|| command.startsWith("<mi") || command.startsWith("<svrd")*/){
					// xml command
					var xml 	= "<xml>" + command +"</xml>";
	                var x2js = new X2JS();
	                var json = x2js.xml_str2json(xml);
					var attempts = 0;
					var currentIndex = index;
					while(!json && attempts < 20){
						// sometimes the Kernel XML API trace continues a message on a new line. This breaks the 'one message per line' rule, so we'll append the xml from the next line if this happens.
						command = command + dataset[index + 1];
						
						// edit the original dataset too (not the file, just in memory) for consistency
						dataset[currentIndex] += dataset[index + 1];
						
						// blank out the next element in the dataset, so it doesn't get falsely parsed
						dataset[index + 1] = "";
						
						// try to parse again
						xml 	= "<xml>" + command +"</xml>";
						x2js = new X2JS();
						json = x2js.xml_str2json(xml);
						
						// increase the index and re-loop if needed
						index++;
						attempts++;
						//debugger;
					}
					XMLRaw = json.xml;
				}else{
					XMLDetails = command;
					// different type of message, e.g. object ID or error occurred:
					//2016-06-01 17:03:04.288 [HOST:YINHWANGV101][PID:5960][THR:6368][Kernel XML API][Trace] XML GetFolderID result: D43364C684E34A5F9B2F9AD7108F7828
					//2016-06-01 17:03:57.968 [HOST:YINHWANGV101][PID:5960][THR:5372][Kernel XML API][Trace] XMLRebuildReportEx: create new message 98A374A34E0FFC6EEF6181906F3D49E6
					//2016-06-01 17:03:58.607 [HOST:YINHWANGV101][PID:5960][THR:3852][Kernel XML API][Trace] XML Command failed. ReturnCode=-2147008845, 0x00000000

				}
				// split context information into usable data (date, time, host, PID, Thread)
				var context = this.splitDt(message[0]);
				var XMLactionName = context[2].substring(context[2].lastIndexOf('XML'));//e.g. XML Command
				
				var logContext = context[2].substr(0, context[2].lastIndexOf('XML') - 1);//[HOST:SERVERNAME][PID:5960][THR:6368][Kernel XML API][Trace]
				var logContextParts = logContext.split(/[[\]]{1,2}/);
				 // the last entry is dummy, need to take it out
				logContextParts.length--;

				// build log message object
				//2016-06-01 17:03:14.335 [HOST:YINHWANGV101][PID:5960][THR:4852][Kernel XML API][Trace] XML Command: <st><sst><st><cmd><get_svrdef_settings/></cmd></st></sst></st>
				var kernelMessage = {
					id: 			$rootScope.dataset.indexes.kernel,
					date: 			context[0],
					time: 			context[1],
					
					host:  			logContextParts[1].split(":")[1],
					pid: 			logContextParts[2].split(":")[1],
					thread: 		logContextParts[3].split(":")[1],
					
					XMLActionName: 	XMLactionName,//XML Command, XML GetFolderID, etc
					XMLDetails: 	XMLDetails,//other details, if not xml string
					XMLRaw: 		JSON.stringify(XMLRaw),//xml
					XMLCommand: 	JSON.stringify(XMLCommand),//xml.st.sst.st.cmd
				}
				//console.log("kernel message parsed: ",kernelMessage);

				$rootScope.dataset.indexes.kernel++;
                $rootScope.dataset.logs.kernel.push(kernelMessage)
				$rootScope.totalData++;				
			}
			Data.parseKernelXMLLog = function(logContents){
				var messages = logContents.split(/\r?\n/);//split by newlines
				if(messages.length){
                    //console.log("Processing " + messages.length + " rows");
					
					// loop through each kernel API message/row for post-processing
					for(var i = 0;i < messages.length;i++){
						var message = messages[i];
						
						// extract XML command from message
						var splitMessage = message.split(": ");
						if(splitMessage.length < 2){
								// found a failed XML command. These aren't consistent to the syntax of other messages (don't have a ":" at the end), but they're still valuable so we'll parse them differently.
							if(message.indexOf("ReturnCode") !== -1){
								// console.log("Found a failed XML command",message);
								splitMessage = message.split(". ");
								
							}else if(message.indexOf("result") !== -1){
								// console.log("Found a failed XML command",message);
								//2016-06-08 10:22:47.093+01:00 [HOST:A97SV50514117AP][PID:1912][THR:6912][Kernel XML API][Trace] XML SaveToInbox result 0
								splitMessage = message.split("result ");
								splitMessage[0] += "result ";
								
							}else if(message.indexOf("finished") !== -1){
								// console.log("Found a failed XML command",message);
								//2017-02-05 12:59:17.154-05:00 [HOST:MSR-PROD-MSTR01][SERVER:CastorServer][PID:10336][THR:1088][Kernel XML API][Trace] XML XMLGetFeatureInfos finished

								splitMessage = message.split(" finished");
								splitMessage[0] += " finished";
								
							}else if(message.indexOf("Successful") !== -1){
								// console.log("Found a failed XML command",message);
								//2017-02-05 12:59:17.154-05:00 [HOST:MSR-PROD-MSTR01][SERVER:CastorServer][PID:10336][THR:1088][Kernel XML API][Trace] XML XMLGetFeatureInfos finished

								splitMessage = message.split(" Successful");
								splitMessage[0] += " Successful";								
							}else if(message.indexOf("# MicroStrategy Log version") !== -1){
								// skip lines that don't have a log line, e.g. "# MicroStrategy Log version 2.0"							
								console.log("Silently skipping this message, since it has no value: "+message);
								continue;
							}else if(message.length == 0){
								console.log("Silently skipping empty log line, since it has no value: "+message);
								continue;
							}else{
								console.error("Unhandled & unparsable log line found ",message);
								Data.logParserError("Unhandled & unparsable log line found, check the javascript console for details. Last skipped log message: "+message,'Warning',message);
								continue;
							}
						}
						
						//console.log("parsing line: ",i);
						Data.processKernelMessage(splitMessage, messages, i);
					}
					console.log("finished processing this kernel XML file");
					
				}else{
					console.log("No kernel messages in this API trace");
				}
				
				$rootScope.dataset.state.filesParsed++;
				if($rootScope.dataset.state.filesParsed == $rootScope.dataset.state.filesParsing){
					Data.progressBar.complete();
					$rootScope.dataset.state.isParsing = false;
				}
				$rootScope.$broadcast("dataset.kernel.added");
                console.log("current kernelAPI dataset contains this many log rows: ", $rootScope.dataset.logs.kernel.length);
			}
			
			Data.recogniseLog = function(logContents){				
				if(logContents.startsWith("<record"))
					return "webXML";
				
				else if(logContents.indexOf("Kernel XML API") !== -1){
					return "kernelXML";
				}
				else return "unknown";
			}
			Data.logParserError = function(error,level,logLine){
				if(typeof(level) == 'undefined') level = 'Danger';
				if(typeof(logLine) != 'undefined'){
					$rootScope.dataset.logs.skipped.push(logLine);
				}
				
				$rootScope.dataset.indexes.skipped++;
				var error = {
					data: {
						status: level,
						message: $rootScope.dataset.indexes.skipped+" lines were not parsed",
						cause: "Reason: " + error,
					}
				}
				Data.handleError(error);
				//debugger;
			}
			Data.handleError = function(e){
				if(typeof(e.data) != 'undefined' && e.data){
					//console.log("POST failed",e);
					console.error(e.data.status + " : " + e.data.message + " : " + e.data.cause);
					$rootScope.hasError = true;
					$rootScope.error = {
						status: e.data.status,
						message: e.data.message,
						cause: e.data.cause
					}; 
				}else{
					//don't think this will ever hit, unless server is unreachable?
					$rootScope.hasError = true;
					$rootScope.error = {
						status: -1,
						message: "uncaught exception",
						cause: "Verify the log file is valid"
					}; 
				}
			};
			// generalist method that takes a log file's contents, decides the log type, and passes the log file to the appropriate parser method
			Data.processNewLog = function(logContents){				
                //logic to determine the type of log (web/webxmlAPI/kernelAPI/DSSErrors.log)
				var logType = Data.recogniseLog(logContents);
				switch(logType){
					case "webXML":
						//console.log("Handling " + logType + " log");
						Data.parseWebXMLLog(logContents);
						break;
					
					case "kernelXML":
						//console.log("Handling " + logType + " log");
						Data.parseKernelXMLLog(logContents);
						break;
					
					default:
						console.error("Error: unhandled log type - type not recognized. Original file: ",logContents);
						var error = {
							data: {
								status: "Parse Failure",
								message: "Unrecognised Log Type",
								cause: "Verify the log file is valid. Contact Tiago if the issue persists."
							}
						}
						Data.handleError(error);
						break;
				}
			}
			Data.testCreation = function(){
				//console.log("Test creation");	
                Data.resetLogs();
				
				var demoWebLog = '<record reset="true">'
+ '  <package>com.microstrategy.webapi</package>'
+ '  <level>SEVERE</level>'
+ '  <miliseconds>1468261032622</miliseconds>'
+  '<timestamp>07/11/2016 19:17:12:624</timestamp>'
+  '<thread>4</thread>'
+  '<class>MSIMsgBuf</class>'
+  '<method>ReadFromChannel</method>'
+  '<message>MsiNetStreamI : Read error. (com.microstrategy.webapi.MSTRWebAPIException)</message>'
+  '<exception>com.microstrategy.webapi.MSTRWebAPIException: MsiNetStreamI : Read error.&#x0A;&#x09;at com.microstrategy.webapi.MSIMsgBuf.readError(Unknown Source)&#x0A;&#x09;at com.microstrategy.webapi.MSIMsgBuf.read(Unknown Source)&#x0A;&#x09;at com.microstrategy.webapi.MSIMsgBuf.ReadHeader(Unknown Source)&#x0A;&#x09;at com.microstrategy.webapi.MSIMsgBuf.ReadFromChannel(Unknown Source)&#x0A;&#x09;at com.microstrategy.webapi.CDSSMsg.ReadFromChannel(Unknown Source)&#x0A;&#x09;at com.microstrategy.webapi.MSIClusterClient.GetClusterMembership(Unknown Source)&#x0A;&#x09;at com.microstrategy.webapi.CDSSXMLClusterNode.getClusterMembership(Unknown Source)&#x0A;&#x09;at com.microstrategy.webapi.CDSSXMLClusterNode.RefreshClusterMembership(Unknown Source)&#x0A;&#x09;at com.microstrategy.webapi.CDSSXMLAdmin.InitConnection(Unknown Source)&#x0A;&#x09;at com.microstrategy.webapi.CDSSXMLAdmin.Connect(Unknown Source)&#x0A;&#x09;at com.microstrategy.web.objects.WebClusterAdminImpl.connect(Unknown Source)&#x0A;&#x09;at com.microstrategy.web.admin.beans.AdminServersHelper.connectIServers(Unknown Source)&#x0A;&#x09;at com.microstrategy.web.admin.beans.AdminServersHelper.connectIServers(Unknown Source)&#x0A;&#x09;at com.microstrategy.web.admin.beans.AdminServersHelper$ServerConnectionsUpdateTask.run(Unknown Source)&#x0A;&#x09;at java.util.TimerThread.mainLoop(Timer.java:555)&#x0A;&#x09;at java.util.TimerThread.run(Timer.java:505)&#x0A;Caused by: java.net.SocketException: Operation timed out&#x0A;&#x09;at java.net.SocketInputStream.socketRead0(Native Method)&#x0A;&#x09;at java.net.SocketInputStream.read(SocketInputStream.java:152)&#x0A;&#x09;at java.net.SocketInputStream.read(SocketInputStream.java:122)&#x0A;&#x09;... 15 more&#x0A;</exception>'
				+ '</record>';	
				
				//demoWebLog = 'something';
				
				var demoKernelLog = '# MicroStrategy Log version 2.0\n'
				+'2016-06-01 17:03:04.288 [HOST:YINHWANGV101][PID:5960][THR:6368][Kernel XML API][Trace] XML Command: <st><sst><st><cmd><gfid sid="E8F075203D0B18A9746C2AB2061BAB85" fdn="39"/></cmd></st></sst></st>\n'
				+'2016-06-01 17:03:04.288 [HOST:YINHWANGV101][PID:5960][THR:6368][Kernel XML API][Trace] XML GetFolderID result: D43364C684E34A5F9B2F9AD7108F7828\n'
				+'2016-06-01 17:03:04.304 [HOST:YINHWANGV101][PID:5960][THR:6468][Kernel XML API][Trace] XML Command: <st><sst><st><cmd><go sid="E8F075203D0B18A9746C2AB2061BAB85" oid="D3C7D461F69C4610AA6BAA5EF51F4125" ot="8" os="268453447" lv="0" bb="1" bc="-1"><extendable_parameter><browsing/></extendable_parameter></go></cmd></st></sst></st>\n'
				+'2016-06-01 17:03:04.335 [HOST:YINHWANGV101][PID:5960][THR:6468][Kernel XML API][Trace] XML GetObjects result: <mi rfd="0" mnri="0" lcl="1033" mxri="6"><in><oi id="0" n="Reports" des="" ab="" did="D3C7D461F69C4610AA6BAA5EF51F4125" tp="8" stp="2048" sta="1073873239" mf="1" acg="255" vr="E979E433412E6C16CBC60382B2C8A0C2" icp="" ct="10/9/2013 6:38:41 PM" nct="2013-10-09 18:38:41" mdt="10/21/2015 9:57:05 AM" nmdt="2015-10-21 09:57:05"><ow did="54F3D26011D2896560009A8E67019608">Administrator</ow></oi><oi id="1" n="Public Objects" des="Folder for all public objects" ab="" did="98FE182C2A10427EACE0CD30B6768258" tp="8" stp="2048" sta="1073873239" acg="255" vr="302201DE49384B53F420DF8CE0F5E94A" icp="" ct="10/9/2013 6:38:41 PM" nct="2013-10-09 18:38:41" mdt="9/29/2015 10:43:17 AM" nmdt="2015-09-29 10:43:17"><ow did="54F3D26011D2896560009A8E67019608">Administrator</ow></oi><oi id="2" n="SMS" des="" ab="" did="D43364C684E34A5F9B2F9AD7108F7828" tp="8" stp="2048" sta="1073873279" acg="255" vr="6B52AEFD47E5DB4605FFFAA76F6DC677" icp="" ct="1/15/2014 4:25:55 PM" nct="2014-01-15 16:25:55" mdt="9/29/2015 10:43:17 AM" nmdt="2015-09-29 10:43:17"><ow did="54F3D26011D2896560009A8E67019608">Administrator</ow></oi><oi id="3" n="Everyone" des="All Users in the system.  Note that this group has no access to any MicroStrategy objects." ab="Everyone" did="C82C6B1011D2894CC0009D9F29718E4F" tp="34" stp="8705" sta="1073881471" acg="255" vr="7D7E24764E078209CFB5C9A4142639EE" icp="" ct="9/23/2013 9:47:43 PM" nct="2013-09-23 21:47:43" mdt="9/29/2015 10:36:44 AM" nmdt="2015-09-29 10:36:44"/><oi id="4" n="Administrator" des="" ab="Administrator" did="54F3D26011D2896560009A8E67019608" tp="34" stp="8704" sta="1073881471" acg="255" vr="80D3AC99430B960892CEE9AFE559FEBC" icp="" ct="9/23/2013 9:47:42 PM" nct="2013-09-23 21:47:42" mdt="5/25/2016 5:45:02 AM" nmdt="2016-05-25 05:45:02"/><oi id="5" n="Public Reports" des="" ab="" did="597F62384317CD57DDE768A6F1F1817C" tp="8" stp="2048" sta="1073873239" acg="255" vr="D235835F4DCD76020B172B822E8E005C" icp="" ct="12/26/2013 10:01:37 PM" nct="2013-12-26 22:01:37" mdt="4/21/2016 8:39:22 PM" nmdt="2016-04-21 20:39:22"><ow did="54F3D26011D2896560009A8E67019608">Administrator</ow></oi><oi id="6" n="Standard Reports" des="" ab="" did="D2331EE8499DAB1B1F77CEB9831A785D" tp="8" stp="2048" sta="1073873279" acg="255" vr="B9F956CA11E4FD4CE1D000802F27718F" icp="" ct="5/15/2014 1:43:32 PM" nct="2014-05-15 13:43:32" mdt="5/18/2015 10:57:51 AM" nmdt="2015-05-18 10:57:51"><ow did="54F3D26011D2896560009A8E67019608">Administrator</ow></oi></in><as><a><fd rfd="2">SMS</fd><a><fd rfd="1">Public Objects</fd></a></a></as><acl cn="3"><ace tp="1" deny="0" inheritable="0" rights="199" trustee="3"/><ace tp="1" deny="0" inheritable="1" rights="199" trustee="3"/><ace tp="1" deny="0" inheritable="0" rights="255" trustee="4"/></acl><fct qsr="0" fcn="2" cc="2" sto="1" pfc="2" pcc="2"><fd rfd="5">Public Reports</fd><fd rfd="6">Standard Reports</fd></fct></mi>\n'
				+'2016-06-01 17:03:04.335 [HOST:YINHWANGV101][PID:5960][THR:5380][Kernel XML API][Trace] XML Command: <st><sst><st><cmd><go sid="E8F075203D0B18A9746C2AB2061BAB85" oid="D3C7D461F69C4610AA6BAA5EF51F4125" ot="8" os="268453447" lv="0" bb="1" bc="-1"><extendable_parameter><browsing/></extendable_parameter></go></cmd></st></sst></st>\n'
				+'2016-06-01 17:03:04.351 [HOST:YINHWANGV101][PID:5960][THR:5380][Kernel XML API][Trace] XML GetObjects result: <mi rfd="0" mnri="0" lcl="1033" mxri="6"><in><oi id="0" n="Reports" des="" ab="" did="D3C7D461F69C4610AA6BAA5EF51F4125" tp="8" stp="2048" sta="1073873239" mf="1" acg="255" vr="E979E433412E6C16CBC60382B2C8A0C2" icp="" ct="10/9/2013 6:38:41 PM" nct="2013-10-09 18:38:41" mdt="10/21/2015 9:57:05 AM" nmdt="2015-10-21 09:57:05"><ow did="54F3D26011D2896560009A8E67019608">Administrator</ow></oi><oi id="1" n="Public Objects" des="Folder for all public objects" ab="" did="98FE182C2A10427EACE0CD30B6768258" tp="8" stp="2048" sta="1073873239" acg="255" vr="302201DE49384B53F420DF8CE0F5E94A" icp="" ct="10/9/2013 6:38:41 PM" nct="2013-10-09 18:38:41" mdt="9/29/2015 10:43:17 AM" nmdt="2015-09-29 10:43:17"><ow did="54F3D26011D2896560009A8E67019608">Administrator</ow></oi><oi id="2" n="SMS" des="" ab="" did="D43364C684E34A5F9B2F9AD7108F7828" tp="8" stp="2048" sta="1073873279" acg="255" vr="6B52AEFD47E5DB4605FFFAA76F6DC677" icp="" ct="1/15/2014 4:25:55 PM" nct="2014-01-15 16:25:55" mdt="9/29/2015 10:43:17 AM" nmdt="2015-09-29 10:43:17"><ow did="54F3D26011D2896560009A8E67019608">Administrator</ow></oi><oi id="3" n="Everyone" des="All Users in the system.  Note that this group has no access to any MicroStrategy objects." ab="Everyone" did="C82C6B1011D2894CC0009D9F29718E4F" tp="34" stp="8705" sta="1073881471" acg="255" vr="7D7E24764E078209CFB5C9A4142639EE" icp="" ct="9/23/2013 9:47:43 PM" nct="2013-09-23 21:47:43" mdt="9/29/2015 10:36:44 AM" nmdt="2015-09-29 10:36:44"/><oi id="4" n="Administrator" des="" ab="Administrator" did="54F3D26011D2896560009A8E67019608" tp="34" stp="8704" sta="1073881471" acg="255" vr="80D3AC99430B960892CEE9AFE559FEBC" icp="" ct="9/23/2013 9:47:42 PM" nct="2013-09-23 21:47:42" mdt="5/25/2016 5:45:02 AM" nmdt="2016-05-25 05:45:02"/><oi id="5" n="Public Reports" des="" ab="" did="597F62384317CD57DDE768A6F1F1817C" tp="8" stp="2048" sta="1073873239" acg="255" vr="D235835F4DCD76020B172B822E8E005C" icp="" ct="12/26/2013 10:01:37 PM" nct="2013-12-26 22:01:37" mdt="4/21/2016 8:39:22 PM" nmdt="2016-04-21 20:39:22"><ow did="54F3D26011D2896560009A8E67019608">Administrator</ow></oi><oi id="6" n="Standard Reports" des="" ab="" did="D2331EE8499DAB1B1F77CEB9831A785D" tp="8" stp="2048" sta="1073873279" acg="255" vr="B9F956CA11E4FD4CE1D000802F27718F" icp="" ct="5/15/2014 1:43:32 PM" nct="2014-05-15 13:43:32" mdt="5/18/2015 10:57:51 AM" nmdt="2015-05-18 10:57:51"><ow did="54F3D26011D2896560009A8E67019608">Administrator</ow></oi></in><as><a><fd rfd="2">SMS</fd><a><fd rfd="1">Public Objects</fd></a></a></as><acl cn="3"><ace tp="1" deny="0" inheritable="0" rights="199" trustee="3"/><ace tp="1" deny="0" inheritable="1" rights="199" trustee="3"/><ace tp="1" deny="0" inheritable="0" rights="255" trustee="4"/></acl><fct qsr="0" fcn="2" cc="2" sto="1" pfc="2" pcc="2"><fd rfd="5">Public Reports</fd><fd rfd="6">Standard Reports</fd></fct></mi>\n'
				+'2016-06-01 17:04:09.106 [HOST:YINHWANGV101][PID:5960][THR:3856][Kernel XML API][Trace] XML GetFolderID result: D43364C684E34A5F9B2F9AD7108F7828\n'
				+'2016-06-01 17:03:58.607 [HOST:YINHWANGV101][PID:5960][THR:3852][Kernel XML API][Trace] XML Command failed. ReturnCode=-2147008845, 0x00000000\n'
				;
								
                Data.processNewLog(demoKernelLog);
                $rootScope.$apply();
			}
			
			// simple tester for parser API
			//setTimeout(Data.testCreation, 2000);
			
			
		    return Data;
		}
	])
	
})();